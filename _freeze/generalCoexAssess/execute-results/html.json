{
  "hash": "ed07f6f8e21e7bfea3d2915c3d89caa3",
  "result": {
    "markdown": "---\ntitle: \"General Coex Evaluation\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(gghalves)\nlibrary(ggstatsplot)\nlibrary(\"gridExtra\")\nlibrary(cowplot)\nlibrary(Matrix)\nlibrary(ggstance)\nlibrary(scales)\n#library(COTAN)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngenesList <- list(\n  \"NPGs\"= \n    c(\"Nes\", \"Vim\", \"Sox2\", \"Sox1\", \"Notch1\", \"Hes1\", \"Hes5\", \"Pax6\"),\n  \"PNGs\"= \n    c(\"Map2\", \"Tubb3\", \"Neurod1\", \"Nefm\", \"Nefl\", \"Dcx\", \"Tbr1\"),\n  \"hk\"= \n    c(\"Calm1\", \"Cox6b1\", \"Ppia\", \"Rpl18\", \"Cox7c\", \"Erh\", \"H3f3a\",\n      \"Taf1\", \"Taf2\", \"Gapdh\", \"Actb\", \"Golph3\", \"Zfr\", \"Sub1\",\n      \"Tars\", \"Amacr\"),\n  \"layers\" = \n    c(\"Reln\",\"Lhx5\",\"Cux1\",\"Satb2\",\"Tle1\",\"Mef2c\",\"Rorb\",\"Sox5\",\"Bcl11b\",\"Fezf2\",\"Foxp2\",\"Ntf3\",\"Rasgrf2\",\"Pvrl3\", \"Cux2\",\"Slc17a6\", \"Sema3c\",\"Thsd7a\", \"Sulf2\", \"Kcnk2\",\"Grik3\", \"Etv1\", \"Tle4\", \"Tmem200a\", \"Glra2\", \"Etv1\",\"Htr1f\", \"Sulf1\",\"Rxfp1\", \"Syt6\") \n  # From https://www.science.org/doi/10.1126/science.aam8999\n)\n```\n:::\n\n\n## COEX and Correlations\n\nImport COTAN coex and correlations data from file\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable.tot.hk <- NA\ntable.tot.neural <- NA\nfor (file in list.files(\"CoexData/\",pattern = \"Corr|Coex\")) {\n  corr <- readRDS(paste0(\"CoexData/\",file))\n  corr <- as.data.frame(as.matrix(corr))\n  if(str_detect(file,pattern = \"CotanCoex\")){\n    code <- \"COTAN coex\"\n  }else if(str_detect(file,pattern = \"CorrSCT\")){\n    code <- \"Seurat SCT corr.\"\n  }else if(str_detect(file,pattern = \"Corr\")){\n    code <- \"Seurat corr.\"\n  }\n  \n  \n  table.hk <- as.data.frame(corr[,genesList$hk])\n  table.hk$Gene1 <- rownames(table.hk)\n  \n  table.hk <- pivot_longer(as.data.frame(table.hk),cols = c(1:(ncol(table.hk)-1)),names_to = \"Gene2\")\n  table.hk$Method <- code\n\n  table.tot.hk <- rbind(table.tot.hk,table.hk)\n  table.tot.hk <- table.tot.hk[! table.tot.hk$Gene1 == table.tot.hk$Gene2,]\n \n  #Not hk\n  table.neural <- as.data.frame(corr[rownames(corr) %in% c(genesList$NPGs,genesList$PNGs,genesList$layers),colnames(corr) %in% c(genesList$NPGs,genesList$PNGs,genesList$layers)])\n  table.neural$Gene1 <- rownames(table.neural)\n  \n  table.neural <- pivot_longer(as.data.frame(table.neural),cols = c(1:(ncol(table.neural)-1)),names_to = \"Gene2\")\n  table.neural$Method <- code\n  \n  table.tot.neural <- rbind(table.tot.neural,table.neural)\n  table.tot.neural <- table.tot.neural[! table.tot.neural$Gene1 == table.tot.neural$Gene2,]\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable.tot.hk <- table.tot.hk[2:nrow(table.tot.hk),]\ntable.tot.hk$GeneType <- \"Constitutive\" \ntable.tot.neural <- table.tot.neural[2:nrow(table.tot.neural),]\ntable.tot.neural$GeneType <- \"Neural\"\n\n## For ECDL\ntmp.tot <- NA\nfor (method in unique(table.tot.hk$Method)) {\n  tmp <- as.data.frame(table.tot.hk[table.tot.hk$Method == method,])\n  tmp$n <- NA\n  tmp[order(abs(tmp$value)),]$n <- c(1:dim(tmp)[1])/(dim(tmp)[1]+1)\n  tmp$Y_axis <- 1-tmp$n\n  tmp.tot <- rbind(tmp.tot,tmp)\n}\ntmp.tot <- tmp.tot[2:nrow(tmp.tot),]\ntable.tot.hk <- tmp.tot\n\ntmp.tot <- NA\nfor (method in unique(table.tot.neural$Method)) {\n  tmp <- as.data.frame(table.tot.neural[table.tot.neural$Method == method,])\n  tmp$n <- NA\n  tmp[order(abs(tmp$value)),]$n <- c(1:dim(tmp)[1])/(dim(tmp)[1]+1)\n  tmp$Y_axis <- 1-tmp$n\n  tmp.tot <- rbind(tmp.tot,tmp)\n}\ntmp.tot <- tmp.tot[2:nrow(tmp.tot),]\ntable.tot.neural <- tmp.tot\n\n############\n\ntable.tot <- rbind(table.tot.hk,table.tot.neural) \ntable.tot <- table.tot[!table.tot$Gene1 == table.tot$Gene2,]\n\nidentical(table.tot[table.tot$Method == \"COTAN coex\",]$Gene1,\n          table.tot[table.tot$Method == \"Seurat corr.\",]$Gene1 )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\nidentical(table.tot[table.tot$Method == \"COTAN coex\",]$Gene2,\n          table.tot[table.tot$Method == \"Seurat corr.\",]$Gene2 )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\nhead(table.tot)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Gene1  Gene2      value     Method     GeneType         n     Y_axis\n2   Nes  Calm1 0.07759659 COTAN coex Constitutive 0.9192519 0.08074807\n3   Nes Cox6b1 0.01041200 COTAN coex Constitutive 0.2809681 0.71903190\n4   Nes   Ppia 0.02778287 COTAN coex Constitutive 0.5916392 0.40836084\n5   Nes  Rpl18 0.11794907 COTAN coex Constitutive 0.9845985 0.01540154\n6   Nes  Cox7c 0.01694457 COTAN coex Constitutive 0.4173817 0.58261826\n7   Nes    Erh 0.06612110 COTAN coex Constitutive 0.8822882 0.11771177\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable.tot$ValAbs <- abs(table.tot$value)\ntable.tot$LogValAbs <- log(table.tot$ValAbs+0.001)\ntable.tot$SqrValAbs <- table.tot$ValAbs**2\n\nggplot(table.tot,aes(x=Method,y=LogValAbs, fill=Method)) +\ngeom_half_violin(alpha=0.8) +\n  #geom_point(position = \"jitter\", size= 0.1,alpha = 0.3)+ \n  geom_half_boxplot(width=0.1, alpha=0.8,side = \"r\") +\n  theme_bw()+   theme(legend.position=\"none\")+#ylim(0,1)+\n  facet_grid(GeneType ~ . , space = \"free_y\", scales = \"free\")+\n  scale_fill_manual(values = c(\"#8856A7\",\"#EDF8FB\",\"#B3CDE3\" ))\n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(table.tot[table.tot$GeneType == \"Neural\",], aes(x = ValAbs, y = -0.5)) +\n\n  # horizontal box plot\n  geom_boxploth(aes(fill = Method)) +\n\n  # normal density plot\n  geom_density(aes(x = ValAbs), inherit.aes = FALSE) +\n\n  # # vertical lines at Q1 / Q2 / Q3\n  # stat_boxploth(geom = \"vline\", aes(xintercept = ..xlower..)) +\n   stat_boxploth(geom = \"vline\", aes(xintercept = ..xmiddle..)) +\n  # stat_boxploth(geom = \"vline\", aes(xintercept = ..xupper..)) +\n  # \n   facet_grid(Method ~ .) +\n  \n  # reproduce original chart's color scale (o/w ordered factors will result\n  # in viridis scale by default, using the current version of ggplot2)\n  scale_fill_discrete()+scale_fill_manual(values = c(\"#8856A7\",\"#EDF8FB\",\"#B3CDE3\" ))+\n  theme_bw()+   theme(legend.position=\"none\")\n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nIn this case we don't see differences between coex and correlations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(table.tot[table.tot$GeneType == \"Constitutive\",], aes(x = ValAbs, y = -0.5)) +\n\n  # horizontal box plot\n  geom_boxploth(aes(fill = Method), outlier.size = 0.5,width=3) +\n\n  # normal density plot\n  geom_density(aes(x = ValAbs), inherit.aes = FALSE) +\n\n  # # vertical lines at Q1 / Q2 / Q3\n  # stat_boxploth(geom = \"vline\", aes(xintercept = ..xlower..)) +\n   stat_boxploth(geom = \"vline\", aes(xintercept = ..xmiddle..)) +\n  # stat_boxploth(geom = \"vline\", aes(xintercept = ..xupper..)) +\n  # \n   facet_grid(Method ~ .) +\n  \n  # reproduce original chart's color scale (o/w ordered factors will result\n  # in viridis scale by default, using the current version of ggplot2)\n  scale_fill_discrete()+scale_fill_manual(values = c(\"#8856A7\",\"#EDF8FB\",\"#B3CDE3\" ))+\n  theme_bw()+   theme(legend.position=\"none\")\n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nWe can clearly observe that the coex is generally more near to zero than the correlations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(table.tot,aes(x=ValAbs, color=Method, y = Y_axis)) + \n  geom_point(alpha=0.8) +\n  scale_color_manual(values = c(\"#8856A7\",\"gray\",\"#B3CDE3\" ))+\n  scale_y_continuous(trans= \"log\",breaks = c(0,0.1,0.25,0.5)\n                         )+\n  scale_x_continuous(trans= \"log\",\n                     breaks = c(0.1,0.2,0.3, 0.4,0.5,0.8), limits = c(0.01,0.85))+\n  theme_bw()+   theme(legend.position=\"bottom\")+ \n  facet_grid(GeneType ~ . )\n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(table.tot.hk,aes(x=abs(value), color=Method))+stat_ecdf(geom = \"point\", size = 0.5 )+scale_color_manual(values = c(\"#8856A7\",\"gray\",\"#B3CDE3\" ))+\n  scale_y_continuous(trans= \"exp\")\n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(table.tot,aes(x=Method,y=ValAbs, fill=Method)) +\n#geom_half_boxplot(alpha=0.8) +\n  #geom_point(position = \"jitter\", size= 0.1,alpha = 0.3)+ \n  geom_boxplot(alpha=0.8,outlier.size = 0.1,outlier.colour='blue', alpha=0.1) +\n  theme_bw()+   theme(legend.position=\"none\")+ylim(0,0.2)+\n  facet_grid(GeneType ~ . , space = \"free_y\", scales = \"free\")+\n  scale_fill_manual(values = c(\"#8856A7\",\"#EDF8FB\",\"#B3CDE3\" ))\n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(table.tot,aes(x=Method,y=ValAbs, fill=GeneType)) +\n  geom_boxplot(alpha=0.8) +\n  #geom_hline(yintercept = -3.39)+\n  #geom_hline(yintercept = -1.86)+\n  #geom_point(position = \"jitter\", size= 0.1,alpha = 0.3)+ \n  #geom_half_boxplot(width=0.1, alpha=0.8,side = \"r\") +\n  theme_bw()+   #theme(legend.position=\"none\")+\n  scale_fill_manual(values = c(\"#8856A7\",\"#EDF8FB\",\"#B3CDE3\" ))\n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n## *p*-values\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable.tot.hk <- NA\ntable.tot.neural <- NA\nfor (file in list.files(\"CoexData/\",pattern = \"PValue\")) {\n  pval <- readRDS(paste0(\"CoexData/\",file))\n  #pval <- as.data.frame(as.matrix(pval))\n  if(str_detect(file,pattern = \"Cotan\")){\n    code <- \"COTAN p-values\"\n    if(all(diag(pval)) == 1){\n      \n      diag(pval) = 0\n    }\n  }else if(str_detect(file,pattern = \"PValuesSCT\")){\n    code <- \"Seurat SCT p-values\"\n  }else if(str_detect(file,pattern = \"SeuratPValues\")){\n    code <- \"Seurat p-values\"\n  }\n  \n  \n  table.hk <- as.data.frame(pval[,genesList$hk])\n  table.hk$Gene1 <- rownames(table.hk)\n  \n  table.hk <- pivot_longer(as.data.frame(table.hk),cols = c(1:(ncol(table.hk)-1)),names_to = \"Gene2\")\n  table.hk$Method <- code\n\n  table.tot.hk <- rbind(table.tot.hk,table.hk)\n  table.tot.hk <- table.tot.hk[! table.tot.hk$Gene1 == table.tot.hk$Gene2,]\n \n  #Not hk\n  table.neural <- as.data.frame(pval[rownames(pval) %in% c(genesList$NPGs,genesList$PNGs,genesList$layers),colnames(pval) %in% c(genesList$NPGs,genesList$PNGs,genesList$layers)])\n  table.neural$Gene1 <- rownames(table.neural)\n  \n  table.neural <- pivot_longer(as.data.frame(table.neural),cols = c(1:(ncol(table.neural)-1)),names_to = \"Gene2\")\n  table.neural$Method <- code\n  \n  table.tot.neural <- rbind(table.tot.neural,table.neural)\n  table.tot.neural <- table.tot.neural[! table.tot.neural$Gene1 == table.tot.neural$Gene2,]\n}\n\ntable.tot.hk <- table.tot.hk[2:nrow(table.tot.hk),]\ntable.tot.hk$GeneType <- \"Constitutive\" \ntable.tot.neural <- table.tot.neural[2:nrow(table.tot.neural),]\ntable.tot.neural$GeneType <- \"Neural\"\n\n## For ECDL\ntmp.tot <- NA\nfor (method in unique(table.tot.hk$Method)) {\n  tmp <- as.data.frame(table.tot.hk[table.tot.hk$Method == method,])\n  tmp$n <- NA\n  tmp[order(abs(tmp$value)),]$n <- c(1:dim(tmp)[1])/(dim(tmp)[1]+1)\n  tmp$Y_axis <- 1-tmp$n\n  tmp.tot <- rbind(tmp.tot,tmp)\n}\ntmp.tot <- tmp.tot[2:nrow(tmp.tot),]\ntable.tot.hk <- tmp.tot\n\ntmp.tot <- NA\nfor (method in unique(table.tot.neural$Method)) {\n  tmp <- as.data.frame(table.tot.neural[table.tot.neural$Method == method,])\n  tmp$n <- NA\n  tmp[order(abs(tmp$value)),]$n <- c(1:dim(tmp)[1])/(dim(tmp)[1]+1)\n  tmp$Y_axis <- 1-tmp$n\n  tmp.tot <- rbind(tmp.tot,tmp)\n}\ntmp.tot <- tmp.tot[2:nrow(tmp.tot),]\ntable.tot.neural <- tmp.tot\n\n############\n\ntable.tot <- rbind(table.tot.hk,table.tot.neural) \ntable.tot <- table.tot[!table.tot$Gene1 == table.tot$Gene2,]\n\nidentical(table.tot[table.tot$Method == \"COTAN p-val\",]$Gene1,\n          table.tot[table.tot$Method == \"Seurat p-val.\",]$Gene1 )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nhead(table.tot)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Gene1  Gene2     value         Method     GeneType         n    Y_axis\n2  Actb  Calm1 0.1154619 COTAN p-values Constitutive 0.3496081 0.6503919\n3  Actb Cox6b1 0.3563300 COTAN p-values Constitutive 0.5415454 0.4584546\n4  Actb   Ppia 0.2790691 COTAN p-values Constitutive 0.4871221 0.5128779\n5  Actb  Rpl18 0.4733509 COTAN p-values Constitutive 0.6257559 0.3742441\n6  Actb  Cox7c 0.8035390 COTAN p-values Constitutive 0.8680851 0.1319149\n7  Actb    Erh 0.6855733 COTAN p-values Constitutive 0.7746920 0.2253080\n```\n:::\n:::\n\n\n### Constitutive genes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(table.tot[table.tot$GeneType == \"Constitutive\",], aes(y = value)) +\n  geom_boxplot(aes(fill = Method), outlier.size = 0.5,width=3) +\n  scale_fill_discrete()+scale_fill_manual(values = c(\"#8856A7\",\"#EDF8FB\",\"#B3CDE3\" ))+\n  theme_bw()#+   theme(legend.position=\"none\")\n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(table.tot.hk,aes(x=value,y=n, color=Method))+geom_point(size = 0.5 )+\n  scale_color_manual(values = c(\"#8856A7\",\"gray\",\"#B3CDE3\" ))+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(table.tot.hk,aes(x=value,y=n, color=Method))+geom_point(size = 0.5 )+ scale_x_continuous(trans = log_trans(base = 10),\n    breaks = trans_breaks(\"log10\", function(x) 10^x),\n    labels = trans_format(\"log10\", math_format(10^.x)),limits = c(10^(-100),0.05)) + ylim(0,0.4) +scale_color_manual(values = c(\"#8856A7\",\"gray\",\"#B3CDE3\" ))+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nWe can observe from this plot that COTAN has lower false positive error in fact the number of constitutive genes with *p-*values lower than 0.05 is quite smaller than from Seurat (both normalization).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(table.tot[table.tot$GeneType == \"Constitutive\",],aes(x=value, color=Method))+geom_density()+xlim(0,0.05)+\n  scale_color_manual(values = c(\"#8856A7\",\"#EDF8FB\",\"#B3CDE3\" ))+\n  theme_bw() \n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n### Neural genes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(table.tot[table.tot$GeneType == \"Neural\",], aes(y = (value))) +\n  geom_boxplot(aes(fill = Method), outlier.size = 0.5,width=3) +\n  scale_fill_discrete()+scale_fill_manual(values = c(\"#8856A7\",\"#EDF8FB\",\"#B3CDE3\" ))+\n  theme_bw() #+ theme(legend.position=\"none\")\n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(table.tot.neural,aes(x=value,y=n, color=Method))+geom_point(size = 0.5 )+scale_color_manual(values = c(\"#8856A7\",\"#EDF8FB\",\"#B3CDE3\" ))+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(table.tot.neural,aes(x=value,y=n, color=Method))+geom_point(size = 0.5 )+ \n  scale_x_continuous(trans = log_trans(base = 10),\n    breaks = trans_breaks(\"log10\", function(x) 10^x),\n    labels = trans_format(\"log10\", math_format(10^.x)),\n    limits = c(0.0001,0.05)) +\n  scale_color_manual(values = c(\"#8856A7\",\"#EDF8FB\",\"#B3CDE3\" ))+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(table.tot.neural,aes(x=value,y=n, color=Method))+geom_point(size = 0.5 )+ \n  scale_x_continuous(trans = log_trans(base = 10),\n    breaks = trans_breaks(\"log10\", function(x) 10^x),\n    labels = trans_format(\"log10\", math_format(10^.x)),\n    limits = c(10^(-300),0.05)) + ylim(0,0.5)+\n  scale_color_manual(values = c(\"#8856A7\",\"#EDF8FB\",\"#B3CDE3\" ))+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n### Direct comparision\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(table.tot,aes(x=value, color=Method))+geom_density()+\n  facet_grid(GeneType ~ .,scales=\"free\")+\n  scale_color_manual(values = c(\"#8856A7\",\"gray\",\"#B3CDE3\" ))+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(table.tot,aes(x=value,y=n, color=Method))+geom_point(size = 0.5 )+ \n  scale_x_continuous(trans = log_trans(base = 10),\n    breaks = trans_breaks(\"log10\", function(x) 10^x),\n    labels = trans_format(\"log10\", math_format(10^.x)),\n    limits = c(0.0001,0.05)) + \n  facet_grid(. ~ GeneType ,scales=\"free\") +\n  scale_color_manual(values = c(\"#8856A7\",\"gray\",\"#B3CDE3\" ))+\n  theme_bw()+ theme(legend.position=\"bottom\")\n```\n\n::: {.cell-output-display}\n![](generalCoexAssess_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSys.time()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2023-11-17 12:57:51 CET\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 20.04.6 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: Europe/Rome\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] scales_1.2.1       ggstance_0.3.6     Matrix_1.6-2       cowplot_1.1.1     \n [5] gridExtra_2.3      ggstatsplot_0.12.0 gghalves_0.1.4     ggplot2_3.4.2     \n [9] stringr_1.5.0      tidyr_1.3.0       \n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.3             generics_0.1.3         stringi_1.8.1         \n [4] lattice_0.22-5         digest_0.6.33          magrittr_2.0.3        \n [7] correlation_0.8.4      evaluate_0.21          grid_4.3.2            \n[10] estimability_1.4.1     mvtnorm_1.2-2          fastmap_1.1.1         \n[13] jsonlite_1.8.7         rematch2_2.1.2         purrr_1.0.1           \n[16] fansi_1.0.4            cli_3.6.1              rlang_1.1.1           \n[19] munsell_0.5.0          withr_2.5.0            yaml_2.3.7            \n[22] statsExpressions_1.5.1 tools_4.3.2            datawizard_0.9.0      \n[25] coda_0.19-4            dplyr_1.1.2            colorspace_2.1-0      \n[28] zeallot_0.1.0          bayestestR_0.13.1      paletteer_1.5.0       \n[31] vctrs_0.6.3            R6_2.5.1               lifecycle_1.0.3       \n[34] emmeans_1.8.7          htmlwidgets_1.6.2      insight_0.19.6        \n[37] pkgconfig_2.0.3        pillar_1.9.0           gtable_0.3.3          \n[40] glue_1.6.2             xfun_0.39              tibble_3.2.1          \n[43] tidyselect_1.2.0       rstudioapi_0.15.0      parameters_0.21.1     \n[46] knitr_1.43             farver_2.1.1           xtable_1.8-4          \n[49] patchwork_1.1.2        htmltools_0.5.5        labeling_0.4.2        \n[52] rmarkdown_2.24         compiler_4.3.2        \n```\n:::\n:::\n",
    "supporting": [
      "generalCoexAssess_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}