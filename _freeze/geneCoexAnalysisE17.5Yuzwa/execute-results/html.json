{
  "hash": "ff8b6a1c1b0f5d307e4f9d2763394684",
  "result": {
    "markdown": "---\ntitle: \"Gene Correlation Analysis E17.5\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(COTAN)\nlibrary(ComplexHeatmap)\nlibrary(circlize)\n```\n:::\n\n\nTo compare the ability of COTAN to asses the real correlation between genes we define some pools of genes:\n\n1.  Constitutive genes\n2.  Neural progenitor genes\n3.  Pan neuronal genes\n4.  Some layer marker genes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenesList <- list(\n  \"NPGs\"= \n    c(\"Nes\", \"Vim\", \"Sox2\", \"Sox1\", \"Notch1\", \"Hes1\", \"Hes5\", \"Pax6\"),\n  \"PNGs\"= \n    c(\"Map2\", \"Tubb3\", \"Neurod1\", \"Nefm\", \"Nefl\", \"Dcx\", \"Tbr1\"),\n  \"hk\"= \n    c(\"Calm1\", \"Cox6b1\", \"Ppia\", \"Rpl18\", \"Cox7c\", \"Erh\", \"H3f3a\",\n      \"Taf1\", \"Taf2\", \"Gapdh\", \"Actb\", \"Golph3\", \"Zfr\", \"Sub1\",\n      \"Tars\", \"Amacr\"),\n  \"layers\" = \n    c(\"Reln\",\"Lhx5\",\"Cux1\",\"Satb2\",\"Tle1\",\"Mef2c\",\"Rorb\",\"Sox5\",\"Bcl11b\",\"Fezf2\",\"Foxp2\")\n)\n```\n:::\n\n\n## COTAN\n\n\n::: {.cell}\n\n```{.r .cell-code}\nobj <- readRDS(\"Data/Yuzwa_MouseCortex/CorticalCells_GSM2861514_E175.cotan.RDS\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoexMat <- getGenesCoex(obj)[c(genesList$NPGs,genesList$hk,genesList$PNGs),c(genesList$NPGs,genesList$hk,genesList$PNGs)]\n\nf1 = colorRamp2(seq(-0.5,0.5, length = 3), c(\"#DC0000B2\", \"white\",\"#3C5488B2\" ))\n\nsplit.genes <- factor(c(rep(\"NPGs\",length(genesList[[\"NPGs\"]])),\n                         rep(\"HK\",length(genesList[[\"hk\"]])),\n                         rep(\"PNGs\",length(genesList[[\"PNGs\"]]))),\n                         levels = c(\"NPGs\",\"HK\",\"PNGs\"))\n\nlgd = Legend(col_fun = f1, title = \"COTAN coex\")\n\nhtmp <- Heatmap(as.matrix(coexMat),\n        #width = ncol(coexMat)*unit(2.5, \"mm\"), \n        height = nrow(coexMat)*unit(3, \"mm\"),\n        cluster_rows = FALSE,\n        cluster_columns = FALSE,\n        col = f1,\n        row_names_side = \"left\",\n        row_names_gp = gpar(fontsize = 11),\n        column_names_gp  = gpar(fontsize = 11),\n        column_split = split.genes,\n        row_split = split.genes,\n        cluster_row_slices = FALSE, \n    cluster_column_slices = FALSE,\n    heatmap_legend_param = list(\n        title = \"COTAN coex\", at = c(-0.5, 0, 0.5),direction = \"horizontal\",\n        labels = c(\"-0.5\", \"0\", \"0.5\")\n    )\n   )\ndraw(htmp, heatmap_legend_side=\"right\")\n```\n\n::: {.cell-output-display}\n![](geneCoexAnalysisE17.5Yuzwa_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nGDIPlot(obj,genes = genesList,GDIThreshold = 1.4)\n```\n\n::: {.cell-output-display}\n![](geneCoexAnalysisE17.5Yuzwa_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Seurat correlation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(Seurat)\nlibrary(patchwork)\nlibrary(Rfast)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsrat<- CreateSeuratObject(counts = getRawData(obj), project = \"E17.5\", min.cells = 3, min.features = 200)\nsrat[[\"percent.mt\"]] <- PercentageFeatureSet(srat, pattern = \"^mt-\")\nsrat <- NormalizeData(srat)\nsrat <- FindVariableFeatures(srat, selection.method = \"vst\", nfeatures = 2000)\n\n# plot variable features with and without labels\nplot1 <- VariableFeaturePlot(srat)\nLabelPoints(plot = plot1, points = c(genesList$NPGs,genesList$PNGs,genesList$layers), repel = TRUE)\n```\n\n::: {.cell-output-display}\n![](geneCoexAnalysisE17.5Yuzwa_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nLabelPoints(plot = plot1, points = c(genesList$hk), repel = TRUE)\n```\n\n::: {.cell-output-display}\n![](geneCoexAnalysisE17.5Yuzwa_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall.genes <- rownames(srat)\nsrat <- ScaleData(srat, features = all.genes)\nseurat.data = srat[[\"RNA\"]]@data\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nseurat.data.cor = cora(t(as.matrix(seurat.data)[c(genesList$NPGs,genesList$hk,genesList$PNGs),]), large = T)\n\nrownames(seurat.data.cor) <- c(genesList$NPGs,genesList$hk,genesList$PNGs)\ncolnames(seurat.data.cor) <- c(genesList$NPGs,genesList$hk,genesList$PNGs)\n\ndiag(seurat.data.cor) <- 0\n\nf1 = colorRamp2(seq(-0.5,0.5, length = 3), c(\"#DC0000B2\", \"white\",\"#3C5488B2\" ))\n\nsplit.genes <- factor(c(rep(\"NPGs\",length(genesList[[\"NPGs\"]])),\n                         rep(\"HK\",length(genesList[[\"hk\"]])),\n                         rep(\"PNGs\",length(genesList[[\"PNGs\"]]))),\n                         levels = c(\"NPGs\",\"HK\",\"PNGs\"))\n\nlgd = Legend(col_fun = f1, title = \"COTAN coex\")\n\nhtmp <- Heatmap(as.matrix(seurat.data.cor),\n        #width = ncol(seurat.corMat)*unit(2.5, \"mm\"), \n        height = nrow(seurat.data.cor)*unit(3, \"mm\"),\n        cluster_rows = FALSE,\n        cluster_columns = FALSE,\n        col = f1,\n        row_names_side = \"left\",\n        row_names_gp = gpar(fontsize = 11),\n        column_names_gp  = gpar(fontsize = 11),\n        column_split = split.genes,\n        row_split = split.genes,\n        cluster_row_slices = FALSE, \n    cluster_column_slices = FALSE,\n    heatmap_legend_param = list(\n        title = \"Seurat corr SCT\", at = c(-0.5, 0, 0.5),direction = \"horizontal\",\n        labels = c(\"-0.5\", \"0\", \"0.5\")\n    )\n   )\ndraw(htmp, heatmap_legend_side=\"right\")\n```\n\n::: {.cell-output-display}\n![](geneCoexAnalysisE17.5Yuzwa_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsrat <-  SCTransform(srat, method = \"glmGamPoi\", vars.to.regress = \"percent.mt\", verbose = FALSE)\nseurat.data = srat[[\"SCT\"]]@data\nseurat.data.cor = cora(t(as.matrix(seurat.data)[c(genesList$NPGs,genesList$hk,genesList$PNGs),]), large = T)\n\nrownames(seurat.data.cor) <- c(genesList$NPGs,genesList$hk,genesList$PNGs)\ncolnames(seurat.data.cor) <- c(genesList$NPGs,genesList$hk,genesList$PNGs)\n\ndiag(seurat.data.cor) <- 0\n\nf1 = colorRamp2(seq(-0.5,0.5, length = 3), c(\"#DC0000B2\", \"white\",\"#3C5488B2\" ))\n\nsplit.genes <- factor(c(rep(\"NPGs\",length(genesList[[\"NPGs\"]])),\n                         rep(\"HK\",length(genesList[[\"hk\"]])),\n                         rep(\"PNGs\",length(genesList[[\"PNGs\"]]))),\n                         levels = c(\"NPGs\",\"HK\",\"PNGs\"))\n\nlgd = Legend(col_fun = f1, title = \"COTAN coex\")\n\nhtmp <- Heatmap(as.matrix(seurat.data.cor),\n        #width = ncol(seurat.corMat)*unit(2.5, \"mm\"), \n        height = nrow(seurat.data.cor)*unit(3, \"mm\"),\n        cluster_rows = FALSE,\n        cluster_columns = FALSE,\n        col = f1,\n        row_names_side = \"left\",\n        row_names_gp = gpar(fontsize = 11),\n        column_names_gp  = gpar(fontsize = 11),\n        column_split = split.genes,\n        row_split = split.genes,\n        cluster_row_slices = FALSE, \n    cluster_column_slices = FALSE,\n    heatmap_legend_param = list(\n        title = \"Seurat corr SCT\", at = c(-0.5, 0, 0.5),direction = \"horizontal\",\n        labels = c(\"-0.5\", \"0\", \"0.5\")\n    )\n   )\ndraw(htmp, heatmap_legend_side=\"right\")\n```\n\n::: {.cell-output-display}\n![](geneCoexAnalysisE17.5Yuzwa_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 20.04.6 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: Europe/Berlin\ntzcode source: system (glibc)\n\nattached base packages:\n[1] grid      stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] Rfast_2.0.7           RcppZiggurat_0.1.6    Rcpp_1.0.10          \n [4] patchwork_1.1.2       SeuratObject_4.1.3    Seurat_4.3.0         \n [7] dplyr_1.1.2           circlize_0.4.15       ComplexHeatmap_2.16.0\n[10] COTAN_2.1.2          \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3          jsonlite_1.8.4             \n  [3] shape_1.4.6                 umap_0.2.10.0              \n  [5] magrittr_2.0.3              spatstat.utils_3.0-3       \n  [7] farver_2.1.1                rmarkdown_2.21             \n  [9] zlibbioc_1.46.0             GlobalOptions_0.1.2        \n [11] vctrs_0.6.1                 ROCR_1.0-11                \n [13] DelayedMatrixStats_1.22.0   spatstat.explore_3.2-1     \n [15] RCurl_1.98-1.12             askpass_1.1                \n [17] S4Arrays_1.0.1              htmltools_0.5.5            \n [19] sctransform_0.3.5           parallelly_1.36.0          \n [21] KernSmooth_2.23-20          htmlwidgets_1.6.2          \n [23] ica_1.0-3                   plyr_1.8.8                 \n [25] plotly_4.10.1               zoo_1.8-12                 \n [27] igraph_1.4.2                mime_0.12                  \n [29] lifecycle_1.0.3             iterators_1.0.14           \n [31] pkgconfig_2.0.3             Matrix_1.5-4               \n [33] R6_2.5.1                    fastmap_1.1.1              \n [35] GenomeInfoDbData_1.2.10     MatrixGenerics_1.12.0      \n [37] fitdistrplus_1.1-8          future_1.32.0              \n [39] shiny_1.7.4                 clue_0.3-64                \n [41] digest_0.6.31               colorspace_2.1-0           \n [43] S4Vectors_0.38.0            tensor_1.5                 \n [45] RSpectra_0.16-1             irlba_2.3.5.1              \n [47] GenomicRanges_1.52.0        labeling_0.4.2             \n [49] progressr_0.13.0            fansi_1.0.4                \n [51] spatstat.sparse_3.0-1       httr_1.4.5                 \n [53] polyclip_1.10-4             abind_1.4-5                \n [55] compiler_4.3.0              withr_2.5.0                \n [57] doParallel_1.0.17           viridis_0.6.2              \n [59] dendextend_1.17.1           MASS_7.3-59                \n [61] openssl_2.0.6               DelayedArray_0.26.1        \n [63] rjson_0.2.21                tools_4.3.0                \n [65] lmtest_0.9-40               httpuv_1.6.9               \n [67] future.apply_1.11.0         goftest_1.2-3              \n [69] glmGamPoi_1.12.1            glue_1.6.2                 \n [71] nlme_3.1-162                promises_1.2.0.1           \n [73] Rtsne_0.16                  cluster_2.1.4              \n [75] reshape2_1.4.4              generics_0.1.3             \n [77] gtable_0.3.3                spatstat.data_3.0-1        \n [79] tidyr_1.3.0                 data.table_1.14.8          \n [81] XVector_0.40.0              sp_1.6-0                   \n [83] utf8_1.2.3                  BiocGenerics_0.46.0        \n [85] spatstat.geom_3.2-1         RcppAnnoy_0.0.20           \n [87] ggrepel_0.9.3               RANN_2.6.1                 \n [89] foreach_1.5.2               pillar_1.9.0               \n [91] stringr_1.5.0               later_1.3.0                \n [93] splines_4.3.0               lattice_0.21-8             \n [95] survival_3.5-5              deldir_1.0-6               \n [97] tidyselect_1.2.0            miniUI_0.1.1.1             \n [99] pbapply_1.7-0               knitr_1.42                 \n[101] gridExtra_2.3               IRanges_2.34.0             \n[103] SummarizedExperiment_1.30.1 scattermore_1.1            \n[105] stats4_4.3.0                xfun_0.39                  \n[107] Biobase_2.60.0              factoextra_1.0.7           \n[109] matrixStats_1.0.0           stringi_1.7.12             \n[111] lazyeval_0.2.2              yaml_2.3.7                 \n[113] evaluate_0.20               codetools_0.2-19           \n[115] tibble_3.2.1                cli_3.6.1                  \n[117] uwot_0.1.14                 xtable_1.8-4               \n[119] reticulate_1.28             munsell_0.5.0              \n[121] GenomeInfoDb_1.36.0         globals_0.16.2             \n[123] spatstat.random_3.1-4       zeallot_0.1.0              \n[125] png_0.1-8                   parallel_4.3.0             \n[127] ellipsis_0.3.2              ggplot2_3.4.2              \n[129] assertthat_0.2.1            sparseMatrixStats_1.12.0   \n[131] bitops_1.0-7                listenv_0.9.0              \n[133] ggthemes_4.2.4              viridisLite_0.4.1          \n[135] scales_1.2.1                ggridges_0.5.4             \n[137] leiden_0.4.3                purrr_1.0.1                \n[139] crayon_1.5.2                GetoptLong_1.0.5           \n[141] rlang_1.1.0                 cowplot_1.1.1              \n```\n:::\n:::\n",
    "supporting": [
      "geneCoexAnalysisE17.5Yuzwa_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}