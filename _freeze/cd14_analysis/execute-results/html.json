{
  "hash": "d07e3ec446bc7fdf0becef3b811c0182",
  "result": {
    "markdown": "---\ntitle: \"CD14 Data-set Anaysis with cleaning\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n#library(SingleCellExperiment)\n#library(DuoClustering2018)\n#library(tidyr)\nlibrary(ggplot2)\n#library(ggsankey) # remotes::install_github(\"davidsjoberg/ggsankey\")\nlibrary(tibble)\nlibrary(zeallot)\nlibrary(COTAN)\noptions(parallelly.fork.enable = TRUE)\n\noutDir <- \"Data/CD14Cleaned/\"\n\nsetLoggingLevel(2)\nsetLoggingFile(file.path(outDir, \"cd14_analysis.log\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Seurat)\ndataset <- Read10X(file.path(outDir, \"/OrigialDatahg19\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsampleCondition <- \"CD14_Monocytes\"\ncd14Obj <- COTAN(raw = dataset)\ncd14Obj <- initializeMetaDataset(cd14Obj,\n                                 GEO = \"10X CD14+ Monocytes\",\n                                 sequencingMethod = \"10X\",\n                                 sampleCondition = sampleCondition)\n\nsampleCondition\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"CD14_Monocytes\"\n```\n:::\n:::\n\n\nInspect cells' sizes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncellSizePlot(cd14Obj, splitPattern = \"-\", numCol = 2)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nDrop cells with too many ritz reads as they are probably duplets\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncellsSizeThr <- 2500\ncd14Obj <- addElementToMetaDataset(cd14Obj, \"Cells size threshold\", cellsSizeThr)\n\ncells_to_rem <- getCells(cd14Obj)[getCellsSize(cd14Obj) > cellsSizeThr]\ncd14Obj <- dropGenesCells(cd14Obj, cells = cells_to_rem)\n\ncellSizePlot(cd14Obj, splitPattern = \"-\", numCol = 2)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nInspect the number of expressed genes per cell\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenesSizePlot(cd14Obj, splitPattern = \"-\", numCol = 2)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nDrop cells with too high genes expession as they are probably duplets\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenesSizeThr <- 800\ncd14Obj <- addElementToMetaDataset(cd14Obj, \"Num genes threshold\", genesSizeThr)\n\nnumExprGenes <- getNumExpressedGenes(cd14Obj)\ncells_to_rem <- names(numExprGenes)[numExprGenes > genesSizeThr]\ncd14Obj <- dropGenesCells(cd14Obj, cells = cells_to_rem)\n\ngenesSizePlot(cd14Obj, splitPattern = \"-\", numCol = 2)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nCheck number of mitocondrial genes expressed in each cell\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmitGenesPattern <- \"^[Mm][Tt]-\"\ngetGenes(cd14Obj)[grep(mitGenesPattern, getGenes(cd14Obj))]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"MT-ND1\"  \"MT-ND2\"  \"MT-CO1\"  \"MT-CO2\"  \"MT-ATP8\" \"MT-ATP6\" \"MT-CO3\" \n [8] \"MT-ND3\"  \"MT-ND4L\" \"MT-ND4\"  \"MT-ND5\"  \"MT-ND6\"  \"MT-CYB\" \n```\n:::\n\n```{.r .cell-code}\nc(mitPlot, mitSizes) %<-%\n  mitochondrialPercentagePlot(cd14Obj, genePrefix = mitGenesPattern,\n                              splitPattern = \"-\", numCol = 2)\n\nplot(mitPlot)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nCells with a too high percentage of mitocondrial genes are likely dead (or at the last problematic) cells. So we drop them!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmitPercThr <- 6.5\ncd14Obj <- addElementToMetaDataset(cd14Obj, \"Mitoc. perc. threshold\", mitPercThr)\n\ncells_to_rem <- rownames(mitSizes)[mitSizes[[\"mit.percentage\"]] > mitPercThr]\n\ncd14Obj <- dropGenesCells(cd14Obj, cells = cells_to_rem)\n\nc(mitPlot, mitSizes) %<-%\n  mitochondrialPercentagePlot(cd14Obj, genePrefix = mitGenesPattern,\n                              splitPattern = \"-\", numCol = 2)\n\nplot(mitPlot)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nCheck number of ribosomial genes expressed in each cell\n\n\n::: {.cell}\n\n```{.r .cell-code}\nribGenesPattern <- \"^RP[SL]\\\\d+\"\ngetGenes(cd14Obj)[grep(ribGenesPattern, getGenes(cd14Obj))]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"RPL22\"          \"RPL11\"          \"RPS6KA1\"        \"RPS8\"          \n  [5] \"RPL5\"           \"RPS27\"          \"RPS10P7\"        \"RPS6KC1\"       \n  [9] \"RPS7\"           \"RPS27A\"         \"RPL31\"          \"RPL37A\"        \n [13] \"RPL32\"          \"RPL15\"          \"RPL14\"          \"RPL29\"         \n [17] \"RPL24\"          \"RPL22L1\"        \"RPL39L\"         \"RPL35A\"        \n [21] \"RPL9\"           \"RPL34-AS1\"      \"RPL34\"          \"RPS3A\"         \n [25] \"RPL37\"          \"RPS23\"          \"RPS14\"          \"RPL26L1\"       \n [29] \"RPS18\"          \"RPS10-NUDT3\"    \"RPS10\"          \"RPL10A\"        \n [33] \"RPL7L1\"         \"RPS12\"          \"RPS6KA2\"        \"RPS6KA2-AS1\"   \n [37] \"RPS6KA3\"        \"RPS4X\"          \"RPS6KA6\"        \"RPL36A\"        \n [41] \"RPL36A-HNRNPH2\" \"RPL39\"          \"RPL10\"          \"RPS20\"         \n [45] \"RPL7\"           \"RPL30\"          \"RPL8\"           \"RPS6\"          \n [49] \"RPL35\"          \"RPL12\"          \"RPL7A\"          \"RPS24\"         \n [53] \"RPL27A\"         \"RPS13\"          \"RPS6KA4\"        \"RPS6KB2\"       \n [57] \"RPS3\"           \"RPS25\"          \"RPS26\"          \"RPL41\"         \n [61] \"RPL6\"           \"RPL21\"          \"RPL10L\"         \"RPS29\"         \n [65] \"RPL36AL\"        \"RPS6KL1\"        \"RPS6KA5\"        \"RPS27L\"        \n [69] \"RPL4\"           \"RPS17\"          \"RPS17L\"         \"RPL3L\"         \n [73] \"RPS2\"           \"RPS15A\"         \"RPL13\"          \"RPL26\"         \n [77] \"RPL23A\"         \"RPL23\"          \"RPL19\"          \"RPL27\"         \n [81] \"RPS6KB1\"        \"RPL38\"          \"RPL17-C18orf32\" \"RPL17\"         \n [85] \"RPS21\"          \"RPS15\"          \"RPL36\"          \"RPS28\"         \n [89] \"RPL18A\"         \"RPS16\"          \"RPS19\"          \"RPL18\"         \n [93] \"RPL13A\"         \"RPS11\"          \"RPS9\"           \"RPL28\"         \n [97] \"RPS5\"           \"RPS4Y1\"         \"RPS4Y2\"         \"RPL3\"          \n[101] \"RPS19BP1\"      \n```\n:::\n\n```{.r .cell-code}\nc(ribPlot, ribSizes) %<-%\n  mitochondrialPercentagePlot(cd14Obj, genePrefix = mitGenesPattern,\n                              splitPattern = \"-\", numCol = 2)\n\nplot(ribPlot)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nCheck no further outliers after all the culling\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncellSizePlot(cd14Obj, splitPattern = \"-\", numCol = 2)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\ngenesSizePlot(cd14Obj, splitPattern = \"-\", numCol = 2)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-11-2.png){width=672}\n:::\n:::\n\n\nClean: round 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncd14Obj <- clean(cd14Obj)\n\nc(pcaCellsPlot, pcaCellsData, genesPlot, UDEPlot, nuPlot, zoomedNuPlot) %<-% cleanPlots(cd14Obj)\n\nplot(pcaCellsPlot)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(genesPlot)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-12-2.png){width=672}\n:::\n\n```{.r .cell-code}\ncd14Obj <- addElementToMetaDataset(cd14Obj, \"Num drop B group\", 0)\n```\n:::\n\n\nVisualize if all is ok:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(UDEPlot)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(nuPlot)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(zoomedNuPlot)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-13-3.png){width=672}\n:::\n:::\n\n\nFinal cleaning to check all is OK\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncd14Obj <- clean(cd14Obj)\n\nc(pcaCellsPlot, pcaCellsData, genesPlot, UDEPlot, nuPlot, zoomedNuPlot) %<-% cleanPlots(cd14Obj)\n\nplot(pcaCellsPlot)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(pcaCellsData)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(genesPlot)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-14-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(UDEPlot)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-14-4.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(nuPlot)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-14-5.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(zoomedNuPlot)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-14-6.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(cellSizePlot(cd14Obj, splitPattern = \"-\", numCol = 2))\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-14-7.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(genesSizePlot(cd14Obj, splitPattern = \"-\", numCol = 2))\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-14-8.png){width=672}\n:::\n:::\n\n\nCalculate genes' COEX\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSys.time()\n\ncd14Obj <- proceedToCoex(cd14Obj, calcCoex = TRUE, cores = 12,\n                         saveObj = TRUE, outDir = outDir)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncd14Obj <- readRDS(file = file.path(outDir, paste0(sampleCondition, \".cotan.RDS\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngdiData <- calculateGDI(cd14Obj)\n\ngenesToLabel <- head(rownames(gdiData[order(gdiData[[\"GDI\"]],\n                                            decreasing = TRUE), ]), n = 50L)\n\nsort(genesToLabel)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"ABI3\"      \"ARHGDIB\"   \"ATP5A1\"    \"ATP6V1G1\"  \"CALM2\"     \"CD53\"     \n [7] \"CD7\"       \"CLEC10A\"   \"CPVL\"      \"CTSW\"      \"FCER1A\"    \"FKBP1A\"   \n[13] \"H2AFY\"     \"HLA-DMB\"   \"HLA-DPA1\"  \"HLA-DPB1\"  \"HLA-DQA1\"  \"HLA-DQA2\" \n[19] \"HLA-DQB1\"  \"HLA-DRA\"   \"HMGN1\"     \"HNRNPA0\"   \"HNRNPA1\"   \"HNRNPA2B1\"\n[25] \"IFITM1\"    \"IL2RG\"     \"IL32\"      \"LDHA\"      \"LDHB\"      \"MYL12A\"   \n[31] \"NPM1\"      \"PARK7\"     \"PDIA6\"     \"PGK1\"      \"PTPRCAP\"   \"RAB7A\"    \n[37] \"RBM3\"      \"RHOA\"      \"RHOC\"      \"RPL5\"      \"S100A6\"    \"S100A8\"   \n[43] \"S100A9\"    \"SELL\"      \"SLC25A5\"   \"TMEM230\"   \"TMEM66\"    \"TUBA1B\"   \n[49] \"TYROBP\"    \"YBX1\"     \n```\n:::\n\n```{.r .cell-code}\ngdiData[genesToLabel[[50L]], \"GDI\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.60883\n```\n:::\n\n```{.r .cell-code}\ngdiPlot <- GDIPlot(cd14Obj, GDIIn = gdiData, GDIThreshold = 1.4,\n                   genes = list(\"Top 10 GDI genes\" = genesToLabel[1L:10L]))\n\nplot(gdiPlot)\n```\n\n::: {.cell-output-display}\n![](cd14_analysis_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n\n```{.r .cell-code}\nSys.time()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2023-08-21 11:49:17 CEST\"\n```\n:::\n:::\n\n\nSave the COTAN object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(cd14Obj, file = file.path(outDir, paste0(sampleCondition, \".cotan.RDS\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncd14Obj <- readRDS(file = file.path(outDir, paste0(sampleCondition, \".cotan.RDS\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nc(splitClusters, splitCoexDF) %<-%\n  cellsUniformClustering(cd14Obj, GDIThreshold = 1.4, cores = 13,\n                         saveObj = TRUE, outDir = outDir)\n\ncd14Obj <- addClusterization(cd14Obj, clName = \"split\",\n                             clusters = splitClusters,\n                             coexDF = splitCoexDF, override = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsplitClusters <- getClusterizationData(cd14Obj, clName = \"split\")[[1]]\n\ntable(splitClusters)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nsplitClusters\n  1   2   3   4   5   6 \n882  26  11 590 889  36 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(cd14Obj, file = file.path(outDir, paste0(sampleCondition, \".cotan.RDS\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nc(mergedClusters, mergedCoexDF) %<-%\n  mergeUniformCellsClusters(cd14Obj, clusters = splitClusters,\n                            GDIThreshold = 1.4, cores = 13,\n                            saveObj = TRUE, outDir = outDir)\n\ncd14Obj <- addClusterization(cd14Obj, clName = \"merge\",\n                             clusters = mergedClusters,\n                             coexDF = mergedCoexDF,\n                             override = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmergedClusters <- getClusterizationData(cd14Obj, clName = \"merge\")[[1]]\n\ntable(mergedClusters)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nmergedClusters\n   1    2    3 \n1515  882   37 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(cd14Obj, file = file.path(outDir, paste0(sampleCondition, \".cotan.RDS\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.1 (2023-06-16)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 20.04.6 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: Europe/Rome\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] SeuratObject_4.1.3 Seurat_4.3.0.1     COTAN_2.1.7        zeallot_0.1.0     \n[5] tibble_3.2.1       ggplot2_3.4.2     \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3     rstudioapi_0.15.0      jsonlite_1.8.7        \n  [4] shape_1.4.6            umap_0.2.10.0          magrittr_2.0.3        \n  [7] spatstat.utils_3.0-3   farver_2.1.1           rmarkdown_2.24        \n [10] GlobalOptions_0.1.2    vctrs_0.6.3            ROCR_1.0-11           \n [13] spatstat.explore_3.2-1 askpass_1.1            htmltools_0.5.5       \n [16] sctransform_0.3.5      parallelly_1.36.0      KernSmooth_2.23-22    \n [19] htmlwidgets_1.6.2      ica_1.0-3              plyr_1.8.8            \n [22] plotly_4.10.2          zoo_1.8-12             igraph_1.5.1          \n [25] mime_0.12              lifecycle_1.0.3        iterators_1.0.14      \n [28] pkgconfig_2.0.3        Matrix_1.6-0           R6_2.5.1              \n [31] fastmap_1.1.1          fitdistrplus_1.1-11    future_1.33.0         \n [34] shiny_1.7.5            clue_0.3-64            digest_0.6.33         \n [37] colorspace_2.1-0       patchwork_1.1.2        S4Vectors_0.38.1      \n [40] tensor_1.5             RSpectra_0.16-1        irlba_2.3.5.1         \n [43] labeling_0.4.2         progressr_0.14.0       RcppZiggurat_0.1.6    \n [46] fansi_1.0.4            spatstat.sparse_3.0-2  httr_1.4.6            \n [49] polyclip_1.10-4        abind_1.4-5            compiler_4.3.1        \n [52] withr_2.5.0            doParallel_1.0.17      viridis_0.6.4         \n [55] dendextend_1.17.1      MASS_7.3-60            openssl_2.1.0         \n [58] rjson_0.2.21           tools_4.3.1            lmtest_0.9-40         \n [61] httpuv_1.6.11          future.apply_1.11.0    goftest_1.2-3         \n [64] glue_1.6.2             nlme_3.1-162           promises_1.2.0.1      \n [67] grid_4.3.1             Rtsne_0.16             cluster_2.1.4         \n [70] reshape2_1.4.4         generics_0.1.3         gtable_0.3.3          \n [73] spatstat.data_3.0-1    tidyr_1.3.0            data.table_1.14.8     \n [76] sp_2.0-0               utf8_1.2.3             BiocGenerics_0.46.0   \n [79] spatstat.geom_3.2-4    RcppAnnoy_0.0.21       ggrepel_0.9.3         \n [82] RANN_2.6.1             foreach_1.5.2          pillar_1.9.0          \n [85] stringr_1.5.0          later_1.3.1            circlize_0.4.15       \n [88] splines_4.3.1          dplyr_1.1.2            lattice_0.21-8        \n [91] survival_3.5-5         deldir_1.0-9           tidyselect_1.2.0      \n [94] ComplexHeatmap_2.16.0  miniUI_0.1.1.1         pbapply_1.7-2         \n [97] knitr_1.43             gridExtra_2.3          IRanges_2.34.1        \n[100] scattermore_1.2        stats4_4.3.1           xfun_0.39             \n[103] factoextra_1.0.7       matrixStats_1.0.0      stringi_1.7.12        \n[106] lazyeval_0.2.2         yaml_2.3.7             evaluate_0.21         \n[109] codetools_0.2-19       cli_3.6.1              RcppParallel_5.1.7    \n[112] uwot_0.1.16            xtable_1.8-4           reticulate_1.30       \n[115] munsell_0.5.0          Rcpp_1.0.11            globals_0.16.2        \n[118] spatstat.random_3.1-5  png_0.1-8              parallel_4.3.1        \n[121] Rfast_2.0.8            ellipsis_0.3.2         assertthat_0.2.1      \n[124] parallelDist_0.2.6     listenv_0.9.0          ggthemes_4.2.4        \n[127] viridisLite_0.4.2      scales_1.2.1           ggridges_0.5.4        \n[130] leiden_0.4.3           purrr_1.0.1            crayon_1.5.2          \n[133] GetoptLong_1.0.5       rlang_1.1.1            cowplot_1.1.1         \n```\n:::\n:::\n",
    "supporting": [
      "cd14_analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}