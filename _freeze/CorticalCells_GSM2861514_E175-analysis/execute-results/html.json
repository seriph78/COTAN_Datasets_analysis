{
  "hash": "72f3430616cd0a447cc7b7408b49f9cc",
  "result": {
    "markdown": "---\ntitle: \"Cortical cells DGE E17.5 Data-set Anaysis\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(tibble)\nlibrary(zeallot)\nlibrary(COTAN)\n\noptions(parallelly.fork.enable = TRUE)\n\noutDir <- \"Data/Yuzwa_MouseCortex/\"\n\nsetLoggingLevel(1)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSetting new log level to 1\n```\n:::\n\n```{.r .cell-code}\nsetLoggingFile(file.path(outDir, \"CorticalCells_GSM2861514_E175-analysis.log\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSetting log file to be: Data/Yuzwa_MouseCortex//CorticalCells_GSM2861514_E175-analysis.log\n```\n:::\n:::\n\n\nRead the dataset from file\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset <- read.csv(file.path(outDir <- \"Data/Yuzwa_MouseCortex/\"\n, \"GSM2861514_E175_Only_Cortical_Cells_DGE.txt\"),\n       header = TRUE, sep = \"\\t\", strip.white = TRUE,row.names = 1)\n```\n:::\n\n\nCrate the COTAN object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsampleCondition <- \"CorticalCells_GSM2861514_E175\"\ncc175Obj <- COTAN(raw = dataset)\ncc175Obj <- initializeMetaDataset(cc175Obj,\n                                  GEO = \"GSM2861511_E135\",\n                                  sequencingMethod = \"Drop_seq\",\n                                  sampleCondition = sampleCondition)\n```\n:::\n\n\nInspect cells' sizes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncellSizePlot(cc175Obj)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n```\n:::\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nDrop cells with too many ritz reads as they are probably duplets\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncellsSizeThr <- 6000\ncc175Obj <- addElementToMetaDataset(cc175Obj, \"Cells size threshold\", cellsSizeThr)\n\ncells_to_rem <- getCells(cc175Obj)[getCellsSize(cc175Obj) > cellsSizeThr]\ncc175Obj <- dropGenesCells(cc175Obj, cells = cells_to_rem)\n\ncellSizePlot(cc175Obj)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nInspect the number of expressed genes per cell\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenesSizePlot(cc175Obj)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n```\n:::\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nDrop cells with too high genes expession as they are probably duplets\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenesSizeThr <- 2800\ncc175Obj <- addElementToMetaDataset(cc175Obj, \"Num genes threshold\", genesSizeThr)\n\nnumExprGenes <- getNumExpressedGenes(cc175Obj)\ncells_to_rem <- names(numExprGenes)[numExprGenes > genesSizeThr]\ncc175Obj <- dropGenesCells(cc175Obj, cells = cells_to_rem)\n\ngenesSizePlot(cc175Obj)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nCheck number of mitocondrial genes expressed in each cell\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmitGenesPattern <- \"^mt-\"\ngetGenes(cc175Obj)[grep(mitGenesPattern, getGenes(cc175Obj))]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"mt-Co1\"  \"mt-Co2\"  \"mt-Co3\"  \"mt-Cytb\" \"mt-Nd1\"  \"mt-Nd2\"  \"mt-Nd4\" \n [8] \"mt-Nd5\"  \"mt-Nd6\"  \"mt-Rnr1\" \"mt-Rnr2\" \"mt-Ta\"   \"mt-Tc\"   \"mt-Te\"  \n[15] \"mt-Tf\"   \"mt-Ti\"   \"mt-Tl1\"  \"mt-Tl2\"  \"mt-Tm\"   \"mt-Tp\"   \"mt-Tq\"  \n[22] \"mt-Ts2\"  \"mt-Tt\"   \"mt-Tv\"   \"mt-Tw\"   \"mt-Ty\"  \n```\n:::\n\n```{.r .cell-code}\nc(mitPlot, mitSizes) %<-%\n  mitochondrialPercentagePlot(cc175Obj, genePrefix = mitGenesPattern)\n\nplot(mitPlot)\n```\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nCells with a too high percentage of mitocondrial genes are likely dead (or at the last problematic) cells. So we drop them!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmitPercThr <- 10.0\ncc175Obj <- addElementToMetaDataset(cc175Obj, \"Mitoc. perc. threshold\", mitPercThr)\n\ncells_to_rem <- rownames(mitSizes)[mitSizes[[\"mit.percentage\"]] > mitPercThr]\n\ncc175Obj <- dropGenesCells(cc175Obj, cells = cells_to_rem)\n\nc(mitPlot, mitSizes) %<-%\n  mitochondrialPercentagePlot(cc175Obj, genePrefix = mitGenesPattern)\n\nplot(mitPlot)\n```\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nCheck no further outliers after all the culling\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncellSizePlot(cc175Obj)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n```\n:::\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\ngenesSizePlot(cc175Obj)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n:::\n\n\nClean: round 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncc175Obj <- clean(cc175Obj)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nGenes/cells selection done: dropped [4751] genes and [0] cells\n```\n:::\n\n```{.r .cell-code}\nc(pcaCellsPlot, pcaCellsData, genesPlot, UDEPlot, nuPlot) %<-% cleanPlots(cc175Obj)\n\nplot(pcaCellsPlot)\n```\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(genesPlot)\n```\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-11-2.png){width=672}\n:::\n:::\n\n\nB group contains high number of hemoglobin genes: so they are not interesting\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncells_to_rem <- rownames(pcaCellsData)[pcaCellsData[[\"groups\"]] == \"B\"]\n\ncc175Obj <- dropGenesCells(cc175Obj, cells = cells_to_rem)\n```\n:::\n\n\nClean: round 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncc175Obj <- clean(cc175Obj)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nGenes/cells selection done: dropped [8] genes and [0] cells\n```\n:::\n\n```{.r .cell-code}\nc(pcaCellsPlot, pcaCellsData, genesPlot, UDEPlot, nuPlot) %<-% cleanPlots(cc175Obj)\n\nplot(pcaCellsPlot)\n```\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(genesPlot)\n```\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n:::\n\n\nB group contains just 3 cells quite different in the 3rd-5th components: better to drop them\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(pcaCellsData)\n```\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncells_to_rem <- rownames(pcaCellsData)[pcaCellsData[[\"groups\"]] == \"B\"]\n\ncc175Obj <- dropGenesCells(cc175Obj, cells = cells_to_rem)\n```\n:::\n\n\nClean: round 3\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncc175Obj <- clean(cc175Obj)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nGenes/cells selection done: dropped [7] genes and [0] cells\n```\n:::\n\n```{.r .cell-code}\nc(pcaCellsPlot, pcaCellsData, genesPlot, UDEPlot, nuPlot) %<-% cleanPlots(cc175Obj)\n\nplot(pcaCellsPlot)\n```\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(genesPlot)\n```\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-15-2.png){width=672}\n:::\n\n```{.r .cell-code}\ncc175Obj <- addElementToMetaDataset(cc175Obj, \"Num drop B group\", 2)\n```\n:::\n\n\nVisualize if all is ok:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(UDEPlot)\n```\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(nuPlot)\n```\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-16-2.png){width=672}\n:::\n\n```{.r .cell-code}\nlowUDEThr <- 0.2 # the threshold to remove low UDE cells\n\nnuDf <- data.frame(\"nu\" = sort(getNu(cc175Obj)), \"n\" = seq_along(getNu(cc175Obj)))\nUDEPlot_zoomed <- ggplot(nuDf, aes(x = n, y = nu)) +\n            geom_point(colour = \"#8491B4B2\", size = 1.0) +\n            xlim(0L, 400L) +\n            ylim(0.0, 1.0) +\n            geom_hline(yintercept = lowUDEThr, linetype = \"dashed\",\n                       color = \"darkred\") +\n            annotate(geom = \"text\", x = 200L, y = 0.25,\n                     label = paste0(\"to remove cells with nu < \", lowUDEThr),\n                     color = \"darkred\", size = 4.5)\n\nplot(UDEPlot_zoomed)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 465 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-16-3.png){width=672}\n:::\n:::\n\n\nDrop very low UDE cells as they are likely outliers\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncc175Obj <- addElementToMetaDataset(cc175Obj, \"Low UDE threshold\", lowUDEThr)\n\ncells_to_rem <- rownames(nuDf)[nuDf[[\"nu\"]] < lowUDEThr]\ncc175Obj <- dropGenesCells(cc175Obj, cells = cells_to_rem)\n```\n:::\n\n\nFinal cleaning to check all is OK\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncc175Obj <- clean(cc175Obj)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nGenes/cells selection done: dropped [0] genes and [0] cells\n```\n:::\n\n```{.r .cell-code}\nc(pcaCellsPlot, pcaCellsData, genesPlot, UDEPlot, nuPlot) %<-% cleanPlots(cc175Obj)\n\nplot(pcaCellsPlot)\n```\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(genesPlot)\n```\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-18-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(UDEPlot)\n```\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-18-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(nuPlot)\n```\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-18-4.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(cellSizePlot(cc175Obj))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-18-5.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(genesSizePlot(cc175Obj))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](CorticalCells_GSM2861514_E175-analysis_files/figure-html/unnamed-chunk-18-6.png){width=672}\n:::\n:::\n\n\nCalculate genes' COEX\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncc175Obj <- proceedToCoex(cc175Obj, calcCoex = TRUE, cores = 12,\n                          saveObj = TRUE, outDir = outDir)\n\ngdiData <- calculateGDI(cc175Obj)\n\ngenesToLabel <- head(rownames(gdiData[order(gdiData[[\"GDI\"]],\n                                            decreasing = TRUE), ]), n = 10L)\n\ngenesToLabel\n\ngdiPlot <- GDIPlot(cc175Obj, GDIIn = gdiData, GDIThreshold = 1.4,\n                   genes = list(\"Top 10 GDI genes\" = genesToLabel))\n\nplot(gdiPlot)\n```\n:::\n\n\nSave the COTAN object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(cc175Obj, file = file.path(outDir, paste0(sampleCondition, \".cotan.RDS\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncc175Obj <- readRDS(\"Data/Yuzwa_MouseCortex/CorticalCells_GSM2861514_E175.cotan.RDS\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsplitClusters <- cellsUniformClustering(cc175Obj, GDIThreshold = 1.4, cores = 13,\n                                        saveObj = TRUE, outDir = outDir)\n\nc(splitCoexDF, splitPValueDF) %<-% DEAOnClusters(cc175Obj, clusters = splitClusters)\n\ncc175Obj <- addClusterization(cc175Obj, clName = \"split\",\n                              clusters = splitClusters,\n                              coexDF = splitCoexDF, override = TRUE)\n\ntable(splitClusters)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(cc175Obj, file = file.path(outDir, paste0(sampleCondition, \".cotan.RDS\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nc(mergedClusters, mergedCoexDF, mergedPValueDF) %<-%\n  mergeUniformCellsClusters(cc175Obj, clusters = splitClusters,\n                            GDIThreshold = 1.4, cores = 13,\n                            saveObj = TRUE, outDir = outDir)\n\ncc175Obj <- addClusterization(cc175Obj, clName = \"merge\",\n                              clusters = mergedClusters,\n                              coexDF = mergedCoexDF,\n                              override = TRUE)\n\ntable(mergedClusters)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(cc175Obj, file = file.path(outDir, paste0(sampleCondition, \".cotan.RDS\")))\n```\n:::\n\n\nRetry dropping the unclustered cells \\[spoiler: does not change anything!\\]\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncells_to_rem <- names(splitClusters)[splitClusters == \"-1\"]\ncc175Obj_2 <- dropGenesCells(cc175Obj, cells = cells_to_rem)\n\ncc175Obj_2 <- addElementToMetaDataset(cc175Obj_2, datasetTags()[[\"cond\"]],\n                                      value = paste0(sampleCondition, \"_2\"))\n\ncc175Obj_2 <- clean(cc175Obj_2)\ncc175Obj_2 <- estimateDispersionBisection(cc175Obj_2, cores = 13)\n\nsplitClusters_2 <- splitClusters[!names(splitClusters) %in% cells_to_rem]\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#clustersMarkersHeatmapPlot(cc175Obj, groupMarkers, clName = \"merge\", kCuts = 4)\n```\n:::\n",
    "supporting": [
      "CorticalCells_GSM2861514_E175-analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}