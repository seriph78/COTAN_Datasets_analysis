{
  "hash": "13b1b31c2967df3cccf3d12dc8ba5dbd",
  "result": {
    "markdown": "---\ntitle: \"GDI Increment From Mixing\"\nauthor: \"Marco Fantozzi\"\ndate: \"2024-06-03\"\noutput: html_document\n---\n\n\n\n\n## Preamble\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(assertthat)\nlibrary(rlang)\nlibrary(scales)\nlibrary(ggplot2)\nlibrary(zeallot)\nlibrary(data.table)\nlibrary(parallelDist)\nlibrary(tidyr)\nlibrary(tidyverse)\nlibrary(ggh4x)\nlibrary(gridExtra)\n\n#options(parallelly.fork.enable = TRUE)\n\ninDir <- file.path(\"Results\")\n\n#setLoggingLevel(2)\n#setLoggingFile(file.path(inDir, \"MixingClustersGDI_ForebrainDorsal.log\"))\n\noutDir <- file.path(inDir, \"GDI_Sensitivity\")\nif (!file.exists(outDir)) {\n  dir.create(outDir)\n}\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n## Load calculated data for analysis\n\n\n::: {.cell}\n\n:::\n\n\n## Recall cluster distance and add it to the results\n\n\n::: {.cell}\n\n```{.r .cell-code}\nzeroOneAvg <- readRDS(file.path(outDir, \"allZeroOne.RDS\"))\ndistZeroOne <- as.matrix(parDist(t(zeroOneAvg), method = \"hellinger\", diag = TRUE, upper = TRUE))^2\n\ndistZeroOneLong <- rownames_to_column(as.data.frame(distZeroOne), var = \"MainCluster\")\ndistZeroOneLong <-pivot_longer(distZeroOneLong,\n                               cols = !MainCluster,\n                               names_to = \"OtherCluster\", \n                               values_to = \"Distance\")\n\ndistZeroOneLong <- as.data.frame(distZeroOneLong[distZeroOneLong[[\"Distance\"]] != 0.0, ])\n\nassert_that(identical(distZeroOneLong[, 1:2], resMix20[, 1:2]))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nperm <- order(distZeroOneLong[[\"Distance\"]])\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scatter plot of the effective increment at 40% mixing [Y]\n# against estimated distance [X]\ndistDF <- cbind(distZeroOneLong[, \"Distance\", drop = FALSE],\n                sqrt(distZeroOneLong[, \"Distance\", drop = FALSE]))\ncolnames(distDF) <- c(\"Distance\", \"DistanceSqrt\")\n\nD2IPlot <- ggplot(cbind(resMix40, distDF),\n                  aes(x=Distance, y=GDIIncrement)) +\n             geom_point() +\n             geom_smooth(method=lm, formula = y ~ x)+\n             ylab(\"Top GDI percentile Increment\") \n           # +  xlim(0, 1.5) + ylim(0, 1.5) + coord_fixed()\n\nplot(D2IPlot)\n```\n\n::: {.cell-output-display}\n![](GDI_Increment_From_Mixing_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Merge all data and plot it using the distance as discriminant\n\n\n::: {.cell}\n\n```{.r .cell-code}\nallRes <- rbind(resMix05[perm, ], resMix10[perm, ], resMix20[perm, ], resMix40[perm, ], resMix80[perm, ])\nallRes <- cbind(allRes, \"Distance\" = rep(distZeroOneLong[[\"Distance\"]][perm], 5))\nrownames(allRes) <- NULL\nallRes <- cbind(allRes, \"ClusterPair\" = rep.int(c(1:210),5))\n\n\nallResWithBase <- cbind(resMix00[perm, ], \"Distance\" = distZeroOneLong[[\"Distance\"]][perm])\nrownames(allResWithBase) <- NULL\nallResWithBase <- cbind(allResWithBase, \"ClusterPair\" = c(1:210))\nallResWithBase <- rbind(allResWithBase, allRes)\n\nassert_that(identical(allRes[, 4], allResWithBase[211:1260, 4]))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(allRes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1050    7\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nIScPlot <- ggplot(allRes, aes(x=MixingFraction, y=GDIIncrement, color=Distance,)) +\n  geom_point() +\n  scale_color_continuous(type = \"viridis\") +\n  scale_x_log10()+\n             ylab(\"Top GDI percentile Increment\") \n\nplot(IScPlot)\n```\n\n::: {.cell-output-display}\n![](GDI_Increment_From_Mixing_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nGScPlot <- ggplot(allResWithBase, aes(x=MixingFraction, y=GDI, color=Distance,)) +\n  geom_point() +\n  scale_color_continuous(type = \"viridis\")+\n             ylab(\"Top GDI percentile\") \n\nplot(GScPlot)\n```\n\n::: {.cell-output-display}\n![](GDI_Increment_From_Mixing_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nreOrder <- function(df, numBlocks) {\n  blockLength <- nrow(df) / numBlocks\n  permut <- rep(1:blockLength, each = numBlocks) +\n              rep(seq(0, nrow(df) - 1, by = blockLength), times = numBlocks)\n  return(df[permut, ])\n}\n\nallRes2 <- reOrder(allRes, 5)\nallResWithBase2 <- reOrder(allResWithBase, 6)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrng <- c(1,210)\n#rng <- c(1,42)\n#rng <- c(43,84)\n#rng <- c(85,126)\n#rng <- c(127,168)\n#rng <- c(169,210)\n\nILinesPLot <- ggplot(allRes2[allRes2[[\"ClusterPair\"]] %between% rng, ],\n                     aes(x = MixingFraction, y = GDIIncrement,\n                         color = (ClusterPair - 1) %/% 35 + 0.5)) + \n  geom_path(aes(group = ClusterPair)) +\n  theme(legend.position = \"none\") +\n  #scale_x_log10() + \n  scale_colour_stepsn(colours = hcl.colors(6, palette = \"Dark 2\")[6:1])+\n             ylab(\"Top GDI percentile Increment\") \n\nplot(ILinesPLot)\n```\n\n::: {.cell-output-display}\n![](GDI_Increment_From_Mixing_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\nGLinesPLot <- ggplot(allResWithBase2[allResWithBase2[[\"ClusterPair\"]] %between% rng, ],\n                     aes(x = MixingFraction, y = GDI,\n                         color = (ClusterPair - 1) %/% 35 + 0.5)) + \n  geom_path(aes(group = ClusterPair)) +\n  theme(legend.position = \"none\") +\n  #scale_x_log10() + \n  scale_colour_stepsn(colours = hcl.colors(6, palette = \"Dark 2\")[6:1]) +\n             ylab(\"Top GDI percentile\") \n#  geom_line(data = data.frame(cbind(MixingFraction = c(0,0.8), GDI = c(1.4,1.4))),\n#            aes(x = MixingFraction, y = GDI))\n\n\nplot(GLinesPLot)\n```\n\n::: {.cell-output-display}\n![](GDI_Increment_From_Mixing_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmg <- function(mixings) {\n  res <- mixings\n  res[res !=0 ] <- ceiling(log2(round(res[res !=0 ] * 40)))\n  return(res)\n}\n\nrng <- c(1,35)\n#rng <- c(43,84)\n#rng <- c(85,126)\n#rng <- c(127,168)\n#rng <- c(169,210)\n\nallRes$Group <- factor((allRes$ClusterPair - 1) %/% 35 + 1)\nlevels(allRes$Group) <- paste0(\"Distance bin \",c(1:6))\n\nallRes$discreteMixing <- factor(mg(allRes$MixingFraction))\nlevels(allRes$discreteMixing) <- c(\"5%\",\"10%\",\"20%\",\"40%\",\"80%\")\n\ndesign <- \"\n  ABC\n  DEF\n  DEF\n\"\n\nfirst.part <- c(\"Distance bin 1\", \"Distance bin 2\", \"Distance bin 3\")\nsecond.part <-c(\"Distance bin 4\", \"Distance bin 5\", \"Distance bin 6\") \n\nIBoxPlotA <- ggplot(allRes[allRes$Group %in% first.part,], aes(x=discreteMixing, \n                       y=GDIIncrement, \n                       fill=Group,\n                       group = discreteMixing)) +\n  geom_boxplot()+\n  geom_jitter(width=0.25, alpha=0.5) +\n  scale_fill_manual(values = c(\"#0B5345\",\"#117A65\",\"#16A085\")) +\n  facet_grid2(cols = vars(Group))+\n  theme_light()+\n  theme(legend.position = \"none\",axis.title.x=element_blank(),\n        axis.title.y =element_blank()) #+\n             #ylab(\"Top GDI percentile Increment\") \n\nIBoxPlotB <- ggplot(allRes[allRes$Group %in% second.part,], aes(x=discreteMixing, \n                       y=GDIIncrement, \n                       fill=Group,\n                       group = discreteMixing)) +\n  geom_boxplot()+\n  geom_jitter(width=0.25, alpha=0.5) +\n  scale_fill_manual(values = c(\"#1ABC9C\",\"#48C9B0\",\"#A3E4D7\")) +\n  facet_grid2(cols = vars(Group))+\n  theme_light()+\n  theme(legend.position = \"none\",axis.title.x=element_blank(),\n        axis.title.y =element_blank()) \n\nfinal.plot1 <- grid.arrange(IBoxPlotA,IBoxPlotB,ncol = 2, nrow = 3,\n             layout_matrix = rbind(c(1,1), c(2,2), c(2,2)))\n```\n\n::: {.cell-output-display}\n![](GDI_Increment_From_Mixing_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\npdf(\"Results/GDI_Sensitivity/GDI_increment.pdf\",width = 7, height = 7)\nplot(final.plot1)\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\npng \n  2 \n```\n:::\n\n```{.r .cell-code}\nplot(final.plot1)\n```\n\n::: {.cell-output-display}\n![](GDI_Increment_From_Mixing_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n\n```{.r .cell-code}\nallResWithBase$Group <- factor((allResWithBase$ClusterPair - 1) %/% 35 + 1)\nlevels(allResWithBase$Group) <- paste0(\"Distance bin \",c(1:6))\n\n\nallResWithBase$discreteMixing <- factor(mg(allResWithBase$MixingFraction))\nlevels(allResWithBase$discreteMixing) <- c(\"0%\",\"5%\",\"10%\",\"20%\",\"40%\",\"80%\")\n\n\nGBoxPlotA <- ggplot(allResWithBase[allResWithBase$Group %in% first.part,], aes(x=discreteMixing, y=GDI, fill=Group,\n                              group = discreteMixing))+\n  geom_boxplot()+\n  geom_jitter(width=0.25, alpha=0.5) +\n  scale_fill_manual(values = c(\"#0B5345\",\"#117A65\",\"#16A085\")) +\n  facet_grid2(cols = vars(Group))+\n  theme_light()+\n  theme(legend.position = \"none\",axis.title.x=element_blank(),\n        axis.title.y =element_blank()) #+\n             #ylab(\"Top GDI percentile Increment\") \n\nGBoxPlotB <- ggplot(allResWithBase[allResWithBase$Group %in% second.part,], aes(x=discreteMixing, y=GDI, fill=Group,\n                              group = discreteMixing)) +\n  geom_boxplot()+\n  geom_jitter(width=0.25, alpha=0.5) +\n  scale_fill_manual(values = c(\"#1ABC9C\",\"#48C9B0\",\"#A3E4D7\")) +\n  facet_grid2(cols = vars(Group))+\n  theme_light()+\n  theme(legend.position = \"none\",axis.title.x=element_blank(),\n        axis.title.y =element_blank()) \n\nfinal.plot2 <- grid.arrange(GBoxPlotA,GBoxPlotB,ncol = 2, nrow = 5,\n             layout_matrix = rbind(c(1,1),c(1,1),c(2,2), c(2,2), c(2,2)))\n```\n\n::: {.cell-output-display}\n![](GDI_Increment_From_Mixing_files/figure-html/unnamed-chunk-10-3.png){width=672}\n:::\n\n```{.r .cell-code}\npdf(\"Results/GDI_Sensitivity/GDI_TopPercentile.pdf\",width = 7, height = 7 )\nplot(final.plot2)\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\npng \n  2 \n```\n:::\n\n```{.r .cell-code}\nplot(final.plot2)\n```\n\n::: {.cell-output-display}\n![](GDI_Increment_From_Mixing_files/figure-html/unnamed-chunk-10-4.png){width=672}\n:::\n:::\n\n\n## Load calculated data about multi clusters cases for analysis\n\n\n::: {.cell}\n\n:::\n\n\n## Compare estimated vs real GDI increment\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scatter plot of the effective increment [Y] against estimated increment [X]\npg <- ggplot(resMix20_2, aes(x=PredictedGDIIncrement, y=GDIIncrement)) +\n  geom_point() +\n  geom_smooth(method=lm, formula = y ~ x + 0) +\n  coord_fixed() +\n  xlim(0, 1.5) + ylim(0, 1.5)+\n             ylab(\"Top GDI percentile Increment\") \n  #scale_x_log10() + scale_y_log10() \n\n\n\nplot(pg)\n```\n\n::: {.cell-output-display}\n![](GDI_Increment_From_Mixing_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nThe plot shows that having the 20% extraneous cells in the mixture coming from multiple clusters does not affect significantly the sensitivity of the GDI to score cluster uniformity.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 20.04.6 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/liblapack.so.3;  LAPACK version 3.9.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: Europe/Rome\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] gridExtra_2.3      ggh4x_0.2.8        lubridate_1.9.3    forcats_1.0.0     \n [5] stringr_1.5.1      dplyr_1.1.4        purrr_1.0.2        readr_2.1.5       \n [9] tibble_3.2.1       tidyverse_2.0.0    tidyr_1.3.1        parallelDist_0.2.6\n[13] data.table_1.15.4  zeallot_0.1.0      ggplot2_3.5.1      scales_1.3.0      \n[17] rlang_1.1.3        assertthat_0.2.1  \n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4         generics_0.1.3     lattice_0.22-6     stringi_1.8.4     \n [5] hms_1.1.3          digest_0.6.35      magrittr_2.0.3     evaluate_0.23     \n [9] grid_4.4.0         timechange_0.3.0   fastmap_1.2.0      Matrix_1.7-0      \n[13] jsonlite_1.8.8     mgcv_1.9-1         fansi_1.0.6        viridisLite_0.4.2 \n[17] cli_3.6.2          munsell_0.5.1      splines_4.4.0      withr_3.0.0       \n[21] yaml_2.3.8         tools_4.4.0        tzdb_0.4.0         colorspace_2.1-0  \n[25] vctrs_0.6.5        R6_2.5.1           lifecycle_1.0.4    htmlwidgets_1.6.4 \n[29] pkgconfig_2.0.3    RcppParallel_5.1.7 pillar_1.9.0       gtable_0.3.5      \n[33] glue_1.7.0         Rcpp_1.0.12        xfun_0.44          tidyselect_1.2.1  \n[37] knitr_1.46         farver_2.1.2       nlme_3.1-164       htmltools_0.5.8.1 \n[41] labeling_0.4.3     rmarkdown_2.27     compiler_4.4.0    \n```\n:::\n:::\n",
    "supporting": [
      "GDI_Increment_From_Mixing_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}