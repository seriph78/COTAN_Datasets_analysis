{
  "hash": "bd7fe851ad3470af988c3df61dad2f43",
  "result": {
    "markdown": "---\ntitle: \"Filtering of PBMC3 using COTAN\"\ndate: \"2024-01-19\"\noutput: html_document\n---\n\n\nLibrary import\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(COTAN)\nlibrary(Seurat)\nlibrary(tibble)\nlibrary(ggplot2)\nlibrary(zeallot)\nlibrary(DropletUtils)\n```\n:::\n\n\nSettings\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatasetName = 'PBMC3'\ndatasetFolder = './Data/'\n\ninDir  = paste(datasetFolder, datasetName, '/raw/10X/', sep='')\noutDir = paste(datasetFolder, datasetName, '/filtered/', sep='')\ndir10X = paste(outDir, '10X/', sep='')\n\nif (!dir.exists(outDir)) {\n  dir.create(outDir, recursive = TRUE, showWarnings = FALSE)\n}\n\nsetLoggingLevel(2)\nsetLoggingFile(paste(outDir, \"logfile.log\", sep=\"\"))\noptions(parallelly.fork.enable = TRUE)\n```\n:::\n\n\nData loading\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset = Read10X(data.dir = inDir, strip.suffix = TRUE)\ndataset = dataset[[1]]\nsampleCond <- datasetName\nPBMC3 <- COTAN(raw = dataset)\nPBMC3 <- initializeMetaDataset(\n  PBMC3,\n  GEO = paste(\"10X \", datasetName, sep=\"\"),\n  sequencingMethod = \"10X\",\n  sampleCond = sampleCond\n)\n```\n:::\n\n\nInspect cells' sizes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncellSizePlot(PBMC3)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nDrop cells with too many reads as they are probably doublets\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncellsSizeThr <- 20000\nPBMC3 <- addElementToMetaDataset(PBMC3, \"Cells size threshold\", cellsSizeThr)\n\ncellsToRem <- getCells(PBMC3)[getCellsSize(PBMC3) > cellsSizeThr]\nPBMC3 <- dropGenesCells(PBMC3, cells = cellsToRem)\n\ncellSizePlot(PBMC3, splitPattern = \"-\", numCol = 2)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nInspect the number of expressed genes per cell\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenesSizePlot(PBMC3, splitPattern = \"-\", numCol = 2)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nDrop cells with too high genes expression as they are probably doublets\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeneSizeThr <- 3500\nPBMC3 <- addElementToMetaDataset(PBMC3, \"Num genes threshold\", geneSizeThr)\n\nnumExprGenes <- getNumExpressedGenes(PBMC3)\ncellsToRem <- names(numExprGenes)[numExprGenes > geneSizeThr]\nPBMC3 <- dropGenesCells(PBMC3, cells = cellsToRem)\n\ngenesSizePlot(PBMC3, splitPattern = \"-\", numCol = 2)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nCheck number of mithocondrial genes expressed in each cell\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmitGenesPattern <- \"^[Mm][Tt]-\"\ngetGenes(PBMC3)[grep(mitGenesPattern, getGenes(PBMC3))]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"MT-ND1\"  \"MT-ND2\"  \"MT-CO1\"  \"MT-CO2\"  \"MT-ATP8\" \"MT-ATP6\" \"MT-CO3\" \n [8] \"MT-ND3\"  \"MT-ND4L\" \"MT-ND4\"  \"MT-ND5\"  \"MT-ND6\"  \"MT-CYB\" \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nc(mitPlot, mitSizes) %<-%\n  mitochondrialPercentagePlot(PBMC3, genePrefix = mitGenesPattern,\n                              splitPattern = \"-\", numCol = 2)\n\nplot(mitPlot)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nWe drop cells with a too high percentage of mitocondrial genes (are likely dead)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmitPercThr <- 10\nPBMC3 <- addElementToMetaDataset(PBMC3, \"Mitoc. perc. threshold\", mitPercThr)\n\ncellsToRem <- rownames(mitSizes)[mitSizes[[\"mit.percentage\"]] > mitPercThr]\n\nPBMC3 <- dropGenesCells(PBMC3, cells = cellsToRem)\n\nc(mitPlot, mitSizes) %<-%\n  mitochondrialPercentagePlot(PBMC3, genePrefix = mitGenesPattern,\n                              splitPattern = \"-\", numCol = 2)\n\nplot(mitPlot)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nCheck number of ribosomial genes expressed in each cell\n\n\n::: {.cell}\n\n```{.r .cell-code}\nribGenesPattern <- \"^RP[SL]\\\\d+\"\ngetGenes(PBMC3)[grep(ribGenesPattern, getGenes(PBMC3))]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"RPL22\"          \"RPL11\"          \"RPS6KA1\"        \"RPS8\"          \n  [5] \"RPL5\"           \"RPS27\"          \"RPS6KC1\"        \"RPS7\"          \n  [9] \"RPS27A\"         \"RPL31\"          \"RPL37A\"         \"RPL32\"         \n [13] \"RPL15\"          \"RPL14\"          \"RPL29\"          \"RPL24\"         \n [17] \"RPL22L1\"        \"RPL39L\"         \"RPL35A\"         \"RPL9\"          \n [21] \"RPL34-AS1\"      \"RPL34\"          \"RPS3A\"          \"RPL37\"         \n [25] \"RPS23\"          \"RPS14\"          \"RPL26L1\"        \"RPS18\"         \n [29] \"RPS10-NUDT3\"    \"RPS10\"          \"RPL10A\"         \"RPL7L1\"        \n [33] \"RPS12\"          \"RPS6KA2\"        \"RPS6KA2-AS1\"    \"RPS6KA3\"       \n [37] \"RPS4X\"          \"RPS6KA6\"        \"RPL36A\"         \"RPL36A-HNRNPH2\"\n [41] \"RPL39\"          \"RPL10\"          \"RPS20\"          \"RPL7\"          \n [45] \"RPL30\"          \"RPL8\"           \"RPS6\"           \"RPL35\"         \n [49] \"RPL12\"          \"RPL7A\"          \"RPL27A\"         \"RPS13\"         \n [53] \"RPS6KA4\"        \"RPS6KB2\"        \"RPS6KB2-AS1\"    \"RPS3\"          \n [57] \"RPS25\"          \"RPS24\"          \"RPS26\"          \"RPL41\"         \n [61] \"RPL6\"           \"RPL21\"          \"RPL10L\"         \"RPS29\"         \n [65] \"RPL36AL\"        \"RPS6KL1\"        \"RPS6KA5\"        \"RPS27L\"        \n [69] \"RPL4\"           \"RPS17\"          \"RPL3L\"          \"RPS2\"          \n [73] \"RPS15A\"         \"RPL13\"          \"RPL26\"          \"RPL23A\"        \n [77] \"RPL23\"          \"RPL19\"          \"RPL27\"          \"RPS6KB1\"       \n [81] \"RPL38\"          \"RPL17-C18orf32\" \"RPL17\"          \"RPS21\"         \n [85] \"RPS15\"          \"RPL36\"          \"RPS28\"          \"RPL18A\"        \n [89] \"RPS16\"          \"RPS19\"          \"RPL18\"          \"RPL13A\"        \n [93] \"RPS11\"          \"RPS9\"           \"RPL28\"          \"RPS5\"          \n [97] \"RPS4Y1\"         \"RPS4Y2\"         \"RPL3\"           \"RPS19BP1\"      \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nc(ribPlot, ribSizes) %<-%\n  mitochondrialPercentagePlot(PBMC3, genePrefix = ribGenesPattern,\n                              splitPattern = \"-\", numCol = 2)\n\nplot(ribPlot)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nCheck no further outliers after all the culling\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncellSizePlot(PBMC3, splitPattern = \"-\", numCol = 2)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngenesSizePlot(PBMC3, splitPattern = \"-\", numCol = 2)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nCleaning, round 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPBMC3 <- clean(PBMC3)\n\nc(pcaCellsPlot, pcaCellsData, genesPlot, UDEPlot, nuPlot, zoomedNuPlot) %<-% cleanPlots(PBMC3)\n\nplot(pcaCellsPlot)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(genesPlot)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nPBMC3 <- addElementToMetaDataset(PBMC3, \"Num drop B group\", 0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(UDEPlot)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(nuPlot)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(zoomedNuPlot)  \n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nyset=0.16\nnuDf <- data.frame(\"nu\" = sort(getNu(PBMC3)), \"n\" = seq_along(getNu(PBMC3)))\nPBMC3 <- addElementToMetaDataset(PBMC3, \"Threshold low UDE cells:\", yset)\ncellsToRem <-rownames(nuDf)[nuDf[[\"nu\"]] < yset]\nPBMC3 <- dropGenesCells(PBMC3, cells = cellsToRem)\n```\n:::\n\n\nCleaning, round 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPBMC3 <- clean(PBMC3)\n\nc(pcaCellsPlot, pcaCellsData, genesPlot, UDEPlot, nuPlot, zoomedNuPlot) %<-% cleanPlots(PBMC3)\n\nplot(pcaCellsPlot)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(pcaCellsData)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(genesPlot)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(UDEPlot)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(nuPlot)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(zoomedNuPlot)\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(cellSizePlot(PBMC3, splitPattern = \"-\", numCol = 2))\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(genesSizePlot(PBMC3, splitPattern = \"-\", numCol = 2))\n```\n\n::: {.cell-output-display}\n![](PBMC3_filtering_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\nSave the filtered dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!dir.exists(dir10X)) {\n  write10xCounts(dir10X, getRawData(PBMC3))\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(PBMC3, file = paste0(outDir, sampleCond, \".cotan.RDS\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 20.04.6 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: Europe/Rome\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] DropletUtils_1.20.0         SingleCellExperiment_1.22.0\n [3] SummarizedExperiment_1.30.2 Biobase_2.60.0             \n [5] GenomicRanges_1.52.0        GenomeInfoDb_1.36.1        \n [7] IRanges_2.34.1              S4Vectors_0.38.1           \n [9] BiocGenerics_0.46.0         MatrixGenerics_1.12.3      \n[11] matrixStats_1.2.0           zeallot_0.1.0              \n[13] ggplot2_3.4.2               tibble_3.2.1               \n[15] Seurat_5.0.0                SeuratObject_5.0.0         \n[17] sp_2.1-1                    COTAN_2.3.0                \n[19] dplyr_1.1.2                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.21          splines_4.3.2            \n  [3] later_1.3.1               bitops_1.0-7             \n  [5] R.oo_1.25.0               polyclip_1.10-4          \n  [7] fastDummies_1.7.3         lifecycle_1.0.3          \n  [9] edgeR_3.42.4              doParallel_1.0.17        \n [11] globals_0.16.2            lattice_0.22-5           \n [13] MASS_7.3-60               dendextend_1.17.1        \n [15] magrittr_2.0.3            limma_3.56.2             \n [17] plotly_4.10.2             rmarkdown_2.24           \n [19] yaml_2.3.7                httpuv_1.6.11            \n [21] sctransform_0.4.1         spam_2.10-0              \n [23] askpass_1.2.0             spatstat.sparse_3.0-2    \n [25] reticulate_1.34.0         cowplot_1.1.1            \n [27] pbapply_1.7-2             RColorBrewer_1.1-3       \n [29] zlibbioc_1.46.0           abind_1.4-5              \n [31] Rtsne_0.16                R.utils_2.12.2           \n [33] purrr_1.0.1               RCurl_1.98-1.12          \n [35] circlize_0.4.15           GenomeInfoDbData_1.2.10  \n [37] ggrepel_0.9.3             irlba_2.3.5.1            \n [39] listenv_0.9.0             spatstat.utils_3.0-3     \n [41] umap_0.2.10.0             goftest_1.2-3            \n [43] RSpectra_0.16-1           spatstat.random_3.2-1    \n [45] dqrng_0.3.0               fitdistrplus_1.1-11      \n [47] parallelly_1.36.0         DelayedMatrixStats_1.22.5\n [49] leiden_0.4.3              codetools_0.2-19         \n [51] DelayedArray_0.26.7       scuttle_1.10.2           \n [53] tidyselect_1.2.0          shape_1.4.6              \n [55] farver_2.1.1              ScaledMatrix_1.8.1       \n [57] viridis_0.6.4             spatstat.explore_3.2-1   \n [59] jsonlite_1.8.7            GetoptLong_1.0.5         \n [61] ellipsis_0.3.2            progressr_0.14.0         \n [63] ggridges_0.5.4            survival_3.5-7           \n [65] iterators_1.0.14          foreach_1.5.2            \n [67] tools_4.3.2               ica_1.0-3                \n [69] Rcpp_1.0.11               glue_1.6.2               \n [71] gridExtra_2.3             xfun_0.39                \n [73] ggthemes_5.0.0            HDF5Array_1.28.1         \n [75] withr_2.5.0               fastmap_1.1.1            \n [77] rhdf5filters_1.12.1       fansi_1.0.4              \n [79] openssl_2.1.0             digest_0.6.33            \n [81] rsvd_1.0.5                parallelDist_0.2.6       \n [83] R6_2.5.1                  mime_0.12                \n [85] colorspace_2.1-0          scattermore_1.2          \n [87] tensor_1.5                spatstat.data_3.0-1      \n [89] R.methodsS3_1.8.2         utf8_1.2.3               \n [91] tidyr_1.3.0               generics_0.1.3           \n [93] data.table_1.14.8         httr_1.4.6               \n [95] htmlwidgets_1.6.2         S4Arrays_1.2.0           \n [97] uwot_0.1.16               pkgconfig_2.0.3          \n [99] gtable_0.3.3              ComplexHeatmap_2.16.0    \n[101] lmtest_0.9-40             XVector_0.40.0           \n[103] htmltools_0.5.7           dotCall64_1.1-0          \n[105] clue_0.3-64               scales_1.3.0             \n[107] png_0.1-8                 knitr_1.43               \n[109] rstudioapi_0.15.0         reshape2_1.4.4           \n[111] rjson_0.2.21              nlme_3.1-163             \n[113] rhdf5_2.44.0              zoo_1.8-12               \n[115] GlobalOptions_0.1.2       stringr_1.5.0            \n[117] KernSmooth_2.23-22        parallel_4.3.2           \n[119] miniUI_0.1.1.1            RcppZiggurat_0.1.6       \n[121] pillar_1.9.0              grid_4.3.2               \n[123] vctrs_0.6.3               RANN_2.6.1               \n[125] promises_1.2.0.1          BiocSingular_1.16.0      \n[127] beachmat_2.16.0           xtable_1.8-4             \n[129] cluster_2.1.6             evaluate_0.21            \n[131] locfit_1.5-9.8            cli_3.6.1                \n[133] compiler_4.3.2            rlang_1.1.1              \n[135] crayon_1.5.2              future.apply_1.11.0      \n[137] labeling_0.4.2            plyr_1.8.8               \n[139] stringi_1.8.1             viridisLite_0.4.2        \n[141] deldir_2.0-2              BiocParallel_1.34.2      \n[143] assertthat_0.2.1          munsell_0.5.0            \n[145] lazyeval_0.2.2            spatstat.geom_3.2-4      \n[147] PCAtools_2.14.0           Matrix_1.6-3             \n[149] RcppHNSW_0.5.0            patchwork_1.1.2          \n[151] sparseMatrixStats_1.12.2  future_1.33.0            \n[153] Rhdf5lib_1.22.0           shiny_1.8.0              \n[155] ROCR_1.0-11               Rfast_2.1.0              \n[157] igraph_1.6.0              RcppParallel_5.1.7       \n```\n:::\n:::\n",
    "supporting": [
      "PBMC3_filtering_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}