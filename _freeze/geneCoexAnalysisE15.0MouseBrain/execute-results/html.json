{
  "hash": "213630904db57d68673eb9798eeffd3a",
  "result": {
    "markdown": "---\ntitle: \"Gene Correlation Analysis E15.0 Mouse Brain\"\n---\n\n\n## Prologue\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(COTAN)\nlibrary(ComplexHeatmap)\nlibrary(circlize)\nlibrary(dplyr)\nlibrary(Hmisc)\nlibrary(Seurat)\nlibrary(patchwork)\nlibrary(Rfast)\nlibrary(parallel)\nlibrary(doParallel)\nlibrary(HiClimR)\nlibrary(stringr)\nlibrary(fst)\n\noptions(parallelly.fork.enable = TRUE)\n\ndataSetFile <- \"Data/MouseCortexFromLoom/e15.0_ForebrainDorsal.cotan.RDS\"\nname <- str_split(dataSetFile,pattern = \"/\",simplify = T)[3]\nname <- str_remove(name,pattern = \".RDS\")\n\nproject = \"E15.0\"\n\n\nsetLoggingLevel(1)\noutDir <- \"CoexData/\"\nsetLoggingFile(paste0(outDir, \"Logs/\",name,\".log\"))\n\nobj <- readRDS(dataSetFile)\nfile_code = getMetadataElement(obj, datasetTags()[[\"cond\"]])\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"src/Functions.R\")\n```\n:::\n\n\nTo compare the ability of COTAN to asses the real correlation between genes we define some pools of genes:\n\n1.  Constitutive genes\n2.  Neural progenitor genes\n3.  Pan neuronal genes\n4.  Some layer marker genes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenesList <- list(\n  \"NPGs\"= \n    c(\"Nes\", \"Vim\", \"Sox2\", \"Sox1\", \"Notch1\", \"Hes1\", \"Hes5\", \"Pax6\"),\n  \"PNGs\"= \n    c(\"Map2\", \"Tubb3\", \"Neurod1\", \"Nefm\", \"Nefl\", \"Dcx\", \"Tbr1\"),\n  \"hk\"= \n    c(\"Calm1\", \"Cox6b1\", \"Ppia\", \"Rpl18\", \"Cox7c\", \"Erh\", \"H3f3a\",\n      \"Taf1\", \"Taf2\", \"Gapdh\", \"Actb\", \"Golph3\", \"Zfr\", \"Sub1\",\n      \"Tars\", \"Amacr\"),\n  \"layers\" = \n    c(\"Reln\",\"Lhx5\",\"Cux1\",\"Satb2\",\"Tle1\",\"Mef2c\",\"Rorb\",\"Sox5\",\"Bcl11b\",\"Fezf2\",\"Foxp2\",\"Ntf3\",\"Rasgrf2\",\"Pvrl3\", \"Cux2\",\"Slc17a6\", \"Sema3c\",\"Thsd7a\", \"Sulf2\", \"Kcnk2\",\"Grik3\", \"Etv1\", \"Tle4\", \"Tmem200a\", \"Glra2\", \"Etv1\",\"Htr1f\", \"Sulf1\",\"Rxfp1\", \"Syt6\") \n  # From https://www.science.org/doi/10.1126/science.aam8999\n)\n```\n:::\n\n\n## COTAN\n\n\n::: {.cell}\n\n```{.r .cell-code}\nint.genes <-getGenes(obj)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoexMat.big <- getGenesCoex(obj)#[int.genes,int.genes]\n\ncoexMat <- getGenesCoex(obj)[c(genesList$NPGs,genesList$hk,genesList$PNGs),c(genesList$NPGs,genesList$hk,genesList$PNGs)]\n\nf1 = colorRamp2(seq(-0.5,0.5, length = 3), c(\"#DC0000B2\", \"white\",\"#3C5488B2\" ))\n\nsplit.genes <- factor(c(rep(\"NPGs\",length(genesList[[\"NPGs\"]])),\n                         rep(\"HK\",length(genesList[[\"hk\"]])),\n                         rep(\"PNGs\",length(genesList[[\"PNGs\"]]))\n                        ),\n                         levels = c(\"NPGs\",\"HK\",\"PNGs\"))\n\nlgd = Legend(col_fun = f1, title = \"COTAN coex\")\n\nhtmp <- Heatmap(as.matrix(coexMat),\n        #width = ncol(coexMat)*unit(2.5, \"mm\"), \n        height = nrow(coexMat)*unit(3, \"mm\"),\n        cluster_rows = FALSE,\n        cluster_columns = FALSE,\n        col = f1,\n        row_names_side = \"left\",\n        row_names_gp = gpar(fontsize = 11),\n        column_names_gp  = gpar(fontsize = 11),\n        column_split = split.genes,\n        row_split = split.genes,\n        cluster_row_slices = FALSE, \n    cluster_column_slices = FALSE,\n    heatmap_legend_param = list(\n        title = \"COTAN coex\", at = c(-0.5, 0, 0.5),direction = \"horizontal\",\n        labels = c(\"-0.5\", \"0\", \"0.5\")\n    )\n   )\ndraw(htmp, heatmap_legend_side=\"right\")\n```\n\n::: {.cell-output-display}\n![](geneCoexAnalysisE15.0MouseBrain_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nGDI_DF <- calculateGDI(obj)\nGDI_DF$geneType <- NA\nfor (cat in names(genesList)) {\n  GDI_DF[rownames(GDI_DF) %in% genesList[[cat]],]$geneType <- cat\n}\n\nGDI_DF$GDI_centered <- scale(GDI_DF$GDI,center = T,scale = T)\n\nwrite.csv(GDI_DF,paste0(\"CoexData/\",\"Variance_GDI_genes\",file_code,\".csv\"))\n\n\nGDI_DF[unlist(genesList),]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         sum.raw.norm      GDI  exp.cells geneType GDI_centered\nNes          7.036617 4.395412 10.3013315     NPGs  2.844118518\nVim          9.750744 4.622956 44.6274235     NPGs  3.141716247\nSox2         6.748800 4.388553  7.8019154     NPGs  2.835147083\nSox1         5.573231 2.954812  2.4760570     NPGs  0.959999758\nNotch1       6.804377 4.507208  8.3158141     NPGs  2.990333393\nHes1         7.293684 5.025427  8.7362766     NPGs  3.668097091\nHes5         7.762615 4.779269 10.1845363     NPGs  3.346154337\nPax6         7.996731 4.881428 18.3368372     NPGs  3.479764633\nMap2        10.179711 4.599886 82.3872927     PNGs  3.111544365\nTubb3       11.940548 5.083784 90.3527213     PNGs  3.744420459\nNeurod1      5.831083 2.015123  3.2936230     PNGs -0.268991989\nNefm         6.753599 3.152181  7.2996963     PNGs  1.218132436\nNefl         6.160391 2.932141  2.9081990     PNGs  0.930349401\nDcx          9.308480 4.495594 58.9581873     PNGs  2.975143901\nTbr1         8.629160 3.877197 34.4662462     PNGs  2.166359967\nCalm1       11.069821 2.194787 97.4421864       hk -0.034015260\nCox6b1      10.240794 2.951945 90.9950946       hk  0.956249628\nPpia        10.343824 2.955456 89.4183602       hk  0.960842148\nRpl18       10.858263 2.901626 96.6596590       hk  0.890439277\nCox7c       10.245556 3.030177 90.4578370       hk  1.058567954\nErh          9.288155 2.659736 65.1016118       hk  0.574079159\nH3f3a       11.042683 2.850307 97.6991357       hk  0.823321315\nTaf1         7.373313 1.751203 15.6855875       hk -0.614165195\nTaf2         7.069134 1.415716 11.9247839       hk -1.052939358\nGapdh       10.083151 3.161859 85.3422098       hk  1.230790542\nActb        11.906861 1.608850 99.5912170       hk -0.800344008\nGolph3       7.440459 1.866369 17.4842327       hk -0.463542657\nZfr          8.645382 2.219651 44.1485634       hk -0.001496122\nSub1         9.822502 3.217085 80.7171222       hk  1.303018400\nTars         7.476170 1.988439 17.9981313       hk -0.303891645\nAmacr        5.810916 1.827868  3.9710348       hk -0.513897792\nReln         8.349205 2.819876  8.3625321   layers  0.783521463\nLhx5         5.830435 3.139114  1.8220042   layers  1.201042642\nCux1         8.606685 3.850086 34.5713618   layers  2.130902087\nSatb2        9.146209 3.735391 31.3361364   layers  1.980896809\nTle1         8.069147 2.752489 25.8000467   layers  0.695387361\nMef2c        9.310240 4.395042 37.2226115   layers  2.843634817\nRorb         7.450810 2.392823 10.9437047   layers  0.224990367\nSox5        10.622002 4.093212 73.5926185   layers  2.448880218\nBcl11b       9.575893 4.600605 54.8937164   layers  3.112483916\nFezf2        9.378784 3.369265 51.6935295   layers  1.502050523\nFoxp2        8.380413 3.553319 23.5342210   layers  1.742770215\nNtf3         5.324482 2.116601  1.8920813   layers -0.136271617\nNA                 NA       NA         NA     <NA>           NA\nNA.1               NA       NA         NA     <NA>           NA\nCux2         7.592847 3.129196 12.2401308   layers  1.188071005\nSlc17a6      7.647733 3.418696 13.7351086   layers  1.566700439\nSema3c       7.661987 2.896666 13.8752628   layers  0.883952732\nThsd7a       6.173797 2.313999  3.1067508   layers  0.121899301\nSulf2        5.738452 2.925339  2.7914039   layers  0.921453194\nKcnk2        8.245680 2.304727 27.1548704   layers  0.109773149\nGrik3        7.243325 3.637511 10.5349217   layers  1.852881971\nEtv1         6.019894 2.984098  3.2235459   layers  0.998302023\nTle4         7.432453 2.929052 13.0343378   layers  0.926308788\nTmem200a     6.201199 2.658151  4.7886008   layers  0.572005411\nGlra2        7.633574 3.878564 13.7467881   layers  2.168147973\nEtv1.1       6.019894 2.984098  3.2235459   layers  0.998302023\nHtr1f        4.884079 2.283998  1.0394768   layers  0.082662331\nSulf1        4.901491 2.120374  0.7241299   layers -0.131337122\nNA.2               NA       NA         NA     <NA>           NA\nSyt6         6.394410 2.800827  4.5082925   layers  0.758607816\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nGDIPlot(obj,GDIIn = GDI_DF, genes = genesList,GDIThreshold = 1.4)\n```\n\n::: {.cell-output-display}\n![](geneCoexAnalysisE15.0MouseBrain_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n## Seurat correlation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsrat<- CreateSeuratObject(counts = getRawData(obj), \n                          project = project, \n                          min.cells = 3, \n                          min.features = 200)\nsrat[[\"percent.mt\"]] <- PercentageFeatureSet(srat, pattern = \"^mt-\")\nsrat <- NormalizeData(srat)\nsrat <- FindVariableFeatures(srat, selection.method = \"vst\", nfeatures = 2000)\n\n# plot variable features with and without labels\nplot1 <- VariableFeaturePlot(srat)\n\nplot1$data$centered_variance <- scale(plot1$data$variance.standardized,\n                                      center = T,scale = F)\n\nwrite.csv(plot1$data,paste0(\"CoexData/\",\n                            \"Variance_Seurat_genes\",\n                            getMetadataElement(obj, \n                                               datasetTags()[[\"cond\"]]),\".csv\"))\n\nLabelPoints(plot = plot1, points = c(genesList$NPGs,genesList$PNGs,genesList$layers), repel = TRUE)\n```\n\n::: {.cell-output-display}\n![](geneCoexAnalysisE15.0MouseBrain_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nLabelPoints(plot = plot1, points = c(genesList$hk), repel = TRUE)\n```\n\n::: {.cell-output-display}\n![](geneCoexAnalysisE15.0MouseBrain_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall.genes <- rownames(srat)\nsrat <- ScaleData(srat, features = all.genes)\nseurat.data = GetAssayData(srat[[\"RNA\"]],layer = \"data\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncorr.pval.list <- correlation_pvalues(data = seurat.data,\n                                      int.genes,\n                                      n.cells = getNumCells(obj))\n\nseurat.data.cor.big <- as.matrix(Matrix::forceSymmetric(corr.pval.list$data.cor, uplo = \"U\"))\n\nhtmp <- correlation_plot(seurat.data.cor.big, \n                         genesList, title=\"Seurat corr\")\n\n\np_values.fromSeurat <- corr.pval.list$p_values\nseurat.data.cor.big <- corr.pval.list$data.cor\n\nrm(corr.pval.list)\ngc()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            used   (Mb) gc trigger    (Mb)   max used    (Mb)\nNcells   7142014  381.5   11454574   611.8   11454574   611.8\nVcells 924825723 7055.9 1760848247 13434.3 1760848247 13434.3\n```\n:::\n\n```{.r .cell-code}\ndraw(htmp, heatmap_legend_side=\"right\")\n```\n\n::: {.cell-output-display}\n![](geneCoexAnalysisE15.0MouseBrain_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n### Seurat SC Transform\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsrat <-  SCTransform(srat, \n                     method = \"glmGamPoi\", \n                     vars.to.regress = \"percent.mt\", \n                     verbose = FALSE)\n\nseurat.data <- GetAssayData(srat[[\"SCT\"]],layer = \"data\")\n\n#Remove genes with all zeros\nseurat.data <-seurat.data[rowSums(seurat.data) > 0,]\n\n\ncorr.pval.list <- correlation_pvalues(seurat.data,\n                                      int.genes,\n                                      n.cells = getNumCells(obj))\n\nseurat.data.cor.big <- as.matrix(Matrix::forceSymmetric(corr.pval.list$data.cor, uplo = \"U\"))\n\nhtmp <- correlation_plot(seurat.data.cor.big, \n                         genesList, title=\"Seurat corr SCT\")\n\n\n\np_values.fromSeurat <- corr.pval.list$p_values\nseurat.data.cor.big <- corr.pval.list$data.cor\n\nrm(corr.pval.list)\ngc()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            used   (Mb) gc trigger    (Mb)   max used    (Mb)\nNcells   8876782  474.1   16780957   896.2   12523735   668.9\nVcells 981924984 7491.5 2113097896 16121.7 2010387494 15338.1\n```\n:::\n\n```{.r .cell-code}\ndraw(htmp, heatmap_legend_side=\"right\")\n```\n\n::: {.cell-output-display}\n![](geneCoexAnalysisE15.0MouseBrain_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n## Monocle\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(monocle3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncds <- new_cell_data_set(getRawData(obj),\n                         cell_metadata = getMetadataCells(obj),\n                         gene_metadata = getMetadataGenes(obj)\n                         )\ncds <- preprocess_cds(cds, num_dim = 100)\n\nnormalized_counts <- normalized_counts(cds)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Remove genes with all zeros\nnormalized_counts <- normalized_counts[rowSums(normalized_counts) > 0,]\n\n\ncorr.pval.list <- correlation_pvalues(normalized_counts,\n                                      int.genes,\n                                      n.cells = getNumCells(obj))\n\nrm(normalized_counts)\n\nmonocle.data.cor.big <- as.matrix(Matrix::forceSymmetric(corr.pval.list$data.cor, uplo = \"U\"))\n\nhtmp <- correlation_plot(data.cor.big = monocle.data.cor.big,\n                         genesList,\n                         title = \"Monocle corr\")\n\n\np_values.from.monocle <- corr.pval.list$p_values\nmonocle.data.cor.big <- corr.pval.list$data.cor\n\nrm(corr.pval.list)\ngc()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            used   (Mb) gc trigger    (Mb)   max used    (Mb)\nNcells   9988466  533.5   16780957   896.2   16780957   896.2\nVcells 985703858 7520.4 2113097896 16121.7 2113090291 16121.6\n```\n:::\n\n```{.r .cell-code}\ndraw(htmp, heatmap_legend_side=\"right\")\n```\n\n::: {.cell-output-display}\n![](geneCoexAnalysisE15.0MouseBrain_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n## ScanPy\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reticulate)\n\ndirOutScP <- paste0(\"CoexData/ScanPy/\")\nif (!dir.exists(dirOutScP)) {\n  dir.create(dirOutScP)\n}\n\nSys.setenv(RETICULATE_PYTHON = \"../../../bin/python3\")\n  py <- import(\"sys\")\n  \n  source_python(\"src/scanpyGenesExpression.py\")\n  scanpyFDR(getRawData(obj), \n                  getMetadataCells(obj), \n                  getMetadataGenes(obj), \n                   \"mt\", \n                   dirOutScP, \n                   file_code,\n            int.genes)\n\nnormalized_counts <- read.csv(paste0(dirOutScP,\n                                     file_code,\"_Scampy_expression_all_genes.gz\"),header = T,row.names = 1)\n\nnormalized_counts <- t(normalized_counts)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Remove genes with all zeros\nnormalized_counts <-normalized_counts[rowSums(normalized_counts) > 0,]\n\n\ncorr.pval.list <- correlation_pvalues(normalized_counts,\n                                      int.genes,\n                                      n.cells = getNumCells(obj))\n\nScanPy.data.cor.big <- as.matrix(Matrix::forceSymmetric(corr.pval.list$data.cor, uplo = \"U\"))\n\n\nhtmp <- correlation_plot(data.cor.big = ScanPy.data.cor.big,\n                         genesList,\n                         title = \"ScanPy corr\")\n\np_values.from.ScanPy <- corr.pval.list$p_values\nScanPy.data.cor.big <- corr.pval.list$data.cor\n\nrm(corr.pval.list)\ngc()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             used   (Mb) gc trigger    (Mb)   max used    (Mb)\nNcells   10011754  534.7   16780957   896.2   16780957   896.2\nVcells 1104424249 8426.1 2535797475 19346.6 2113094869 16121.7\n```\n:::\n\n```{.r .cell-code}\ndraw(htmp, heatmap_legend_side=\"right\")\n```\n\n::: {.cell-output-display}\n![](geneCoexAnalysisE15.0MouseBrain_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSys.time()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2024-05-06 12:53:42 CEST\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 20.04.6 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/liblapack.so.3;  LAPACK version 3.9.0\n\nlocale:\n[1] C.UTF-8\n\ntime zone: Europe/Rome\ntzcode source: system (glibc)\n\nattached base packages:\n [1] stats4    parallel  grid      stats     graphics  grDevices utils    \n [8] datasets  methods   base     \n\nother attached packages:\n [1] reticulate_1.36.1           monocle3_1.3.4             \n [3] SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2\n [5] GenomicRanges_1.52.0        GenomeInfoDb_1.36.1        \n [7] IRanges_2.34.1              S4Vectors_0.38.1           \n [9] MatrixGenerics_1.12.3       matrixStats_1.2.0          \n[11] Biobase_2.60.0              BiocGenerics_0.46.0        \n[13] fstcore_0.9.18              fst_0.9.8                  \n[15] stringr_1.5.0               HiClimR_2.2.1              \n[17] doParallel_1.0.17           iterators_1.0.14           \n[19] foreach_1.5.2               Rfast_2.1.0                \n[21] RcppParallel_5.1.7          RcppZiggurat_0.1.6         \n[23] Rcpp_1.0.11                 patchwork_1.2.0            \n[25] Seurat_5.0.0                SeuratObject_5.0.0         \n[27] sp_2.1-1                    Hmisc_5.1-0                \n[29] dplyr_1.1.2                 circlize_0.4.15            \n[31] ComplexHeatmap_2.16.0       COTAN_2.5.0                \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.21          splines_4.3.2            \n  [3] later_1.3.1               bitops_1.0-7             \n  [5] tibble_3.2.1              polyclip_1.10-4          \n  [7] rpart_4.1.23              fastDummies_1.7.3        \n  [9] lifecycle_1.0.3           globals_0.16.2           \n [11] lattice_0.22-5            MASS_7.3-60              \n [13] backports_1.4.1           dendextend_1.17.1        \n [15] magrittr_2.0.3            plotly_4.10.2            \n [17] rmarkdown_2.24            yaml_2.3.7               \n [19] httpuv_1.6.11             glmGamPoi_1.12.2         \n [21] sctransform_0.4.1         spam_2.10-0              \n [23] askpass_1.2.0             spatstat.sparse_3.0-2    \n [25] minqa_1.2.5               cowplot_1.1.1            \n [27] pbapply_1.7-2             RColorBrewer_1.1-3       \n [29] zlibbioc_1.46.0           abind_1.4-5              \n [31] Rtsne_0.17                purrr_1.0.1              \n [33] RCurl_1.98-1.12           nnet_7.3-19              \n [35] GenomeInfoDbData_1.2.10   ggrepel_0.9.5            \n [37] irlba_2.3.5.1             listenv_0.9.0            \n [39] spatstat.utils_3.0-3      terra_1.7-39             \n [41] umap_0.2.10.0             goftest_1.2-3            \n [43] RSpectra_0.16-1           spatstat.random_3.2-1    \n [45] dqrng_0.3.0               fitdistrplus_1.1-11      \n [47] parallelly_1.37.1         DelayedMatrixStats_1.22.5\n [49] ncdf4_1.22                leiden_0.4.3             \n [51] codetools_0.2-19          DelayedArray_0.26.7      \n [53] tidyselect_1.2.0          shape_1.4.6              \n [55] farver_2.1.1              lme4_1.1-34              \n [57] ScaledMatrix_1.8.1        viridis_0.6.4            \n [59] base64enc_0.1-3           spatstat.explore_3.2-1   \n [61] jsonlite_1.8.7            GetoptLong_1.0.5         \n [63] ellipsis_0.3.2            progressr_0.14.0         \n [65] Formula_1.2-5             ggridges_0.5.4           \n [67] survival_3.5-8            tools_4.3.2              \n [69] ica_1.0-3                 glue_1.7.0               \n [71] gridExtra_2.3             xfun_0.39                \n [73] ggthemes_5.1.0            withr_3.0.0              \n [75] fastmap_1.1.1             boot_1.3-28              \n [77] fansi_1.0.4               openssl_2.1.0            \n [79] digest_0.6.33             rsvd_1.0.5               \n [81] parallelDist_0.2.6        R6_2.5.1                 \n [83] mime_0.12                 colorspace_2.1-0         \n [85] Cairo_1.6-1               scattermore_1.2          \n [87] tensor_1.5                spatstat.data_3.0-1      \n [89] utf8_1.2.3                tidyr_1.3.0              \n [91] generics_0.1.3            data.table_1.15.0        \n [93] httr_1.4.6                htmlwidgets_1.6.2        \n [95] S4Arrays_1.2.0            uwot_0.1.16              \n [97] pkgconfig_2.0.3           gtable_0.3.3             \n [99] lmtest_0.9-40             XVector_0.40.0           \n[101] htmltools_0.5.8           dotCall64_1.1-0          \n[103] clue_0.3-64               scales_1.3.0             \n[105] png_0.1-8                 knitr_1.43               \n[107] rstudioapi_0.15.0         reshape2_1.4.4           \n[109] rjson_0.2.21              nloptr_2.0.3             \n[111] checkmate_2.3.0           nlme_3.1-163             \n[113] zoo_1.8-12                GlobalOptions_0.1.2      \n[115] KernSmooth_2.23-22        miniUI_0.1.1.1           \n[117] foreign_0.8-86            pillar_1.9.0             \n[119] vctrs_0.6.3               RANN_2.6.1               \n[121] promises_1.2.0.1          BiocSingular_1.16.0      \n[123] beachmat_2.16.0           xtable_1.8-4             \n[125] cluster_2.1.6             htmlTable_2.4.1          \n[127] evaluate_0.21             zeallot_0.1.0            \n[129] cli_3.6.1                 compiler_4.3.2           \n[131] rlang_1.1.1               crayon_1.5.2             \n[133] future.apply_1.11.0       labeling_0.4.2           \n[135] plyr_1.8.8                stringi_1.8.1            \n[137] viridisLite_0.4.2         deldir_2.0-2             \n[139] BiocParallel_1.34.2       assertthat_0.2.1         \n[141] munsell_0.5.0             lazyeval_0.2.2           \n[143] spatstat.geom_3.2-4       PCAtools_2.14.0          \n[145] Matrix_1.6-3              RcppHNSW_0.6.0           \n[147] sparseMatrixStats_1.12.2  future_1.33.0            \n[149] ggplot2_3.5.0             shiny_1.8.0              \n[151] ROCR_1.0-11               igraph_2.0.3             \n```\n:::\n:::\n",
    "supporting": [
      "geneCoexAnalysisE15.0MouseBrain_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}