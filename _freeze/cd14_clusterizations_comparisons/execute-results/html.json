{
  "hash": "b36958c8faa51f90aae0d4b6614817d8",
  "result": {
    "markdown": "---\ntitle: \"CD14+ clusterizations comparisons with CellTypist\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n#library(SingleCellExperiment)\n#library(DuoClustering2018)\n#library(tidyr)\nlibrary(rlang)\nlibrary(ggplot2)\nlibrary(ggsankey) # remotes::install_github(\"davidsjoberg/ggsankey\")\nlibrary(tibble)\nlibrary(zeallot)\nlibrary(assertthat)\nlibrary(COTAN)\n#devtools::load_all(\"~/dev/COTAN/COTAN/\")\n\noptions(parallelly.fork.enable = TRUE)\n\noutDir <- \"Results/Clusterization/\"\n\nsetLoggingLevel(2)\nsetLoggingFile(file.path(outDir, \"CD14_Monocytes_ClusterizationsComparisons.log\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncd14Obj <- readRDS(file = file.path(\"Data/CD14Cleaned/\", \"CD14_Monocytes.cotan.RDS\"))\n\nsampleCondition <- getMetadataElement(cd14Obj, datasetTags()[[\"cond\"]])\n\nsampleCondition\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"CD14_Monocytes\"\n```\n:::\n\n```{.r .cell-code}\ngetClusterizations(cd14Obj)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"split\"           \"merge\"           \"majority-voting\"\n```\n:::\n\n```{.r .cell-code}\nmetaC <- getMetadataCells(cd14Obj)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsplitClusters <- getClusters(cd14Obj, \"split\")\nmergedClusters <- getClusters(cd14Obj, \"merge\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlabelsDF <- read.csv(file.path(\"Data/CD14Cleaned/\", \"CD14Cleaned_Immune_All_Low_predicted_labels.csv\"), header = TRUE)\nlabelsDF <- column_to_rownames(labelsDF, var = \"X\")\nrownames(labelsDF) <- gsub(\"[.]\", \"-\", rownames(labelsDF))\n\ncells_to_keep <- rownames(labelsDF)[rownames(labelsDF) %in% getCells(cd14Obj)]\nassert_that(identical(cells_to_keep, getCells(cd14Obj)))\n\nmajorityVotingClusters <- labelsDF[cells_to_keep, \"majority_voting\"]\nnames(majorityVotingClusters) <- cells_to_keep\n\nmajorityVotingCoexDF <- DEAOnClusters(cd14Obj, majorityVotingClusters)\n\ncd14Obj <- addClusterization(cd14Obj, clName = \"majority-voting\",\n                             clusters = majorityVotingClusters,\n                             coexDF = majorityVotingCoexDF)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\nSave the COTAN object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(cd14Obj, file = file.path(outDir, paste0(sampleCondition, \".cotan.RDS\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnlevels(splitClusters)\nhead(sort(table(splitClusters), decreasing = TRUE), 10L)\n\nnlevels(mergedClusters)\nhead(sort(table(mergedClusters), decreasing = TRUE), 10L)\n\nnlevels(majorityVotingClusters)\nhead(sort(table(majorityVotingClusters), decreasing = TRUE), 10L)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsplitClustersDF <- as.data.frame(splitClusters)\nsplitClustersDF[[\"cell\"]] <- rownames(splitClustersDF)\ncolnames(splitClustersDF)[[1]] <- \"COTAN.split.cluster\"\nsplitClustersDF <- splitClustersDF[order(splitClustersDF[[\"COTAN.split.cluster\"]]), ]\n\nmergedClustersDF <- as.data.frame(mergedClusters)\nmergedClustersDF[[\"cell\"]] <- rownames(mergedClustersDF)\ncolnames(mergedClustersDF)[[1]] <- \"COTAN.merged.cluster\"\nmergedClustersDF <- mergedClustersDF[order(mergedClustersDF[[\"COTAN.merged.cluster\"]]), ]\n\nmajorityVotingClustersDF <- as.data.frame(majorityVotingClusters)\nmajorityVotingClustersDF[[\"cell\"]] <- rownames(majorityVotingClustersDF)\ncolnames(majorityVotingClustersDF)[[1]] <- \"majority.voting.cluster\"\nmajorityVotingClustersDF <- majorityVotingClustersDF[order(majorityVotingClustersDF[[\"majority.voting.cluster\"]]), ]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmjvt_split.table <- merge.data.frame(x = majorityVotingClustersDF, y = splitClustersDF,\n                                         by = \"cell\", all.x = TRUE, all.y = TRUE)\n\ntable(mjvt_split.table[,c(2L, 3L)])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       COTAN.split.cluster\nmajority.voting.cluster   1   2   3   4   5   6\n    Classical monocytes 879   1   1 589 889  36\n    NK cells              0  25   0   0   0   0\n    pDC                   3   0  10   1   0   0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmjvt_split.table2 <- mjvt_split.table %>% make_long(majority.voting.cluster, COTAN.split.cluster)\n\nggplot(mjvt_split.table2,\n       aes(x = x,\n           next_x = next_x,\n           node = node,\n           next_node = next_node,\n           fill = factor(node),\n           label = node)) +\n  geom_sankey(flow.alpha = 0.75, node.color = 1) +\n  geom_sankey_label(size = 3.5, color = 1, fill = \"white\") +\n  scale_fill_viridis_d(option = \"A\", alpha = 0.95) +\n  theme_sankey(base_size = 16) +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](cd14_clusterizations_comparisons_files/figure-html/COTAN.split.cluster.sankey.maj.voting-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmjvt_merged.table <- merge.data.frame(x = majorityVotingClustersDF, y = mergedClustersDF,\n                                         by = \"cell\", all.x = TRUE, all.y = TRUE)\n\ntable(mjvt_merged.table[,c(2L, 3L)])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       COTAN.merged.cluster\nmajority.voting.cluster    1    2    3\n    Classical monocytes 1514  879    2\n    NK cells               0    0   25\n    pDC                    1    3   10\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmjvt_merged.table2 <- mjvt_merged.table %>% make_long(majority.voting.cluster, COTAN.merged.cluster)\n\nggplot(mjvt_merged.table2,\n       aes(x = x,\n           next_x = next_x,\n           node = node,\n           next_node = next_node,\n           fill = factor(node),\n           label = node)) +\n  geom_sankey(flow.alpha = 0.75, node.color = 1) +\n  geom_sankey_label(size = 3.5, color = 1, fill = \"white\") +\n  scale_fill_viridis_d(option = \"A\", alpha = 0.95) +\n  theme_sankey(base_size = 16) +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](cd14_clusterizations_comparisons_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.1 (2023-06-16)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 20.04.6 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: Europe/Rome\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] COTAN_2.1.7        assertthat_0.2.1   zeallot_0.1.0      tibble_3.2.1      \n[5] ggsankey_0.0.99999 ggplot2_3.4.2      rlang_1.1.1       \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3     rstudioapi_0.15.0      jsonlite_1.8.7        \n  [4] shape_1.4.6            umap_0.2.10.0          magrittr_2.0.3        \n  [7] spatstat.utils_3.0-3   farver_2.1.1           rmarkdown_2.24        \n [10] GlobalOptions_0.1.2    vctrs_0.6.3            ROCR_1.0-11           \n [13] spatstat.explore_3.2-1 askpass_1.1            htmltools_0.5.5       \n [16] sctransform_0.3.5      parallelly_1.36.0      KernSmooth_2.23-22    \n [19] htmlwidgets_1.6.2      ica_1.0-3              plyr_1.8.8            \n [22] plotly_4.10.2          zoo_1.8-12             igraph_1.5.1          \n [25] mime_0.12              lifecycle_1.0.3        iterators_1.0.14      \n [28] pkgconfig_2.0.3        Matrix_1.6-0           R6_2.5.1              \n [31] fastmap_1.1.1          fitdistrplus_1.1-11    future_1.33.0         \n [34] shiny_1.7.5            clue_0.3-64            digest_0.6.33         \n [37] colorspace_2.1-0       patchwork_1.1.2        S4Vectors_0.38.1      \n [40] Seurat_4.3.0.1         tensor_1.5             RSpectra_0.16-1       \n [43] irlba_2.3.5.1          labeling_0.4.2         progressr_0.14.0      \n [46] RcppZiggurat_0.1.6     fansi_1.0.4            spatstat.sparse_3.0-2 \n [49] httr_1.4.6             polyclip_1.10-4        abind_1.4-5           \n [52] compiler_4.3.1         withr_2.5.0            doParallel_1.0.17     \n [55] viridis_0.6.4          dendextend_1.17.1      MASS_7.3-60           \n [58] openssl_2.1.0          rjson_0.2.21           tools_4.3.1           \n [61] lmtest_0.9-40          httpuv_1.6.11          future.apply_1.11.0   \n [64] goftest_1.2-3          glue_1.6.2             nlme_3.1-162          \n [67] promises_1.2.0.1       grid_4.3.1             Rtsne_0.16            \n [70] cluster_2.1.4          reshape2_1.4.4         generics_0.1.3        \n [73] gtable_0.3.3           spatstat.data_3.0-1    tidyr_1.3.0           \n [76] data.table_1.14.8      sp_2.0-0               utf8_1.2.3            \n [79] BiocGenerics_0.46.0    spatstat.geom_3.2-4    RcppAnnoy_0.0.21      \n [82] ggrepel_0.9.3          RANN_2.6.1             foreach_1.5.2         \n [85] pillar_1.9.0           stringr_1.5.0          later_1.3.1           \n [88] circlize_0.4.15        splines_4.3.1          dplyr_1.1.2           \n [91] lattice_0.21-8         survival_3.5-5         deldir_1.0-9          \n [94] tidyselect_1.2.0       ComplexHeatmap_2.16.0  miniUI_0.1.1.1        \n [97] pbapply_1.7-2          knitr_1.43             gridExtra_2.3         \n[100] IRanges_2.34.1         scattermore_1.2        stats4_4.3.1          \n[103] xfun_0.39              factoextra_1.0.7       matrixStats_1.0.0     \n[106] stringi_1.7.12         lazyeval_0.2.2         yaml_2.3.7            \n[109] evaluate_0.21          codetools_0.2-19       cli_3.6.1             \n[112] RcppParallel_5.1.7     uwot_0.1.16            xtable_1.8-4          \n[115] reticulate_1.30        munsell_0.5.0          Rcpp_1.0.11           \n[118] globals_0.16.2         spatstat.random_3.1-5  png_0.1-8             \n[121] parallel_4.3.1         Rfast_2.0.8            ellipsis_0.3.2        \n[124] parallelDist_0.2.6     listenv_0.9.0          ggthemes_4.2.4        \n[127] viridisLite_0.4.2      scales_1.2.1           ggridges_0.5.4        \n[130] SeuratObject_4.1.3     leiden_0.4.3           purrr_1.0.1           \n[133] crayon_1.5.2           GetoptLong_1.0.5       cowplot_1.1.1         \n```\n:::\n:::\n",
    "supporting": [
      "cd14_clusterizations_comparisons_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}